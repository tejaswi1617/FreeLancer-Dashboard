{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/PageHeader.js","services/notificationService.js","components/Notification.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","pages/About.js","pages/Tnc.js","pages/Privacy.js","services/registerServices.js","pages/Auth/Login.js","pages/Auth/Register.js","services/dashboardService.js","pages/Dashboard.js","components/Datatable.js","services/projectsServices.js","services/clientService.js","pages/Profile.js","pages/EditProfile.js","services/invoiceServices.js","pages/Invoices/InvoiceGeneration.js","services/timelogServices.js","pages/Timelogs.js","pages/Projects/AddProject.js","pages/Projects.js","pages/Projects/EditProject.js","pages/Projects/ViewProject.js","pages/Clients/AddClient.js","pages/Clients.js","pages/Clients/EditClient.js","pages/Clients/ViewClient.js","services/testimonialServices.js","pages/Testimonials.js","pages/RequestTestimonial.js","pages/Invoices.js","services/todoListService.js","pages/TodoList.js","services/calendarServices.js","pages/Calendar.js","pages/Invoices/EditInvoice.js","pages/BusinessCard.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","aria-current","PageHeader","props","title","subtitle","data","a","object","currentDate","userId","axios","post","result","value","eventName","category","Notification","openNotification","setState","NotificationService","setStatus","then","response","fetchNotifications","handleNotificationShow","catch","error","console","log","state","values","notificationShow","localStorage","getItem","moment","format","this","notifications","forEach","element","item","viewStatus","push","Dropdown","Toggle","id","Menu","map","index","Item","onClick","Modal","show","onHide","handleNotificationClose","Header","closeButton","Title","Body","Component","withRouter","DashboardNavbar","useState","removeItem","Sidebar","location","useLocation","open","setOpen","Collapse","in","Overflow","ToC","pathname","class","DashboardLayout","history","useHistory","useEffect","fluid","Row","Col","md","as","DashboardSidebar","Home","role","About","Tnc","Privacy","target","rel","user","put","Login","email","password","loginData","setLoginData","emailError","passwordError","loginErrors","setLoginErrors","handleChange","e","newLogin","name","handleSubmit","preventDefault","valid","newLoginError","registerServices","validateUser","success","setItem","_id","alert","message","handleMail","prompt","resetPassword","mailParams","emailjs","send","status","text","onSubmit","Form","Label","type","placeholder","onChange","Button","Register","checkEmail","checkPassword","checkMobile","mobile","linkedin","website","confirmPassword","registrationInfo","setRegistrationInfo","nameError","mobileError","linkedinError","websiteError","confirmPasswordError","registrationErrors","setRegistrationErrors","newRegistration","newRegError","test","addNewUser","variant","get","params","Dashboard","clients","projects","invoices","testimonials","stats","setStats","doughnutData","setDoughnutData","lineData","setLineData","barData","setBarData","dashboardService","res","clientProjects","labels","datasets","label","backgroundColor","borderWidth","clientInvoiceStats","invoices_paid","invoices_due","timelogStats","dates","durations","fill","borderColor","style","fontSize","Card","options","responsive","Datatable","columns","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","width","Number","Pagination","First","disabled","Prev","Array","v","Next","Last","length","delete","client","saveData","deleteData","Profile","userInfo","setUserInfo","fetchUserById","Name","Email","ContactNo","LinkedInProfile","Website","hover","EditProfile","editUser","date","InvoiceGeneration","onValueChange","event","validateProject","isValid","project","projectError","validateDate","validatestartDate","validateEndDate","validateDueDate","dueDate","selectedDate","Date","endDate","dueDateError","startAt","startAtError","today","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","invoiceDetails","generateDate","now","invoiceServices","getTags","tags","totalCost","startdate","enddate","endAt","seconds","Math","round","toFixed","minutes","hour","description","task","hours","total","concat","generate","totalcost","saveInvoice","addInvoice","save","downloadInvoice","doc","jsPDF","Moment","setFont","Emailsender","freelancerName","fromEmail","projectNAme","toEmail","clientName","freelancerMail","clientMail","sendemail","getUserEmail","freelancerdata","getClentEmail","clientdata","ClientName","closeInvoice","projectId","readonly","paymentStatus","invoiceNumber","Total","generatedDate","accessor","findInvoice","projectName","startDate","taskendDate","tagId","getAllProject","pageContent","onBlur","isInvalid","Feedback","PureComponent","Timelogs","Cell","deleteTask","setData","timelogServices","list","lastTask","setTask","restartTimer","timerState","setTimerState","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","floor","slice","setInterval","setProjects","setClients","clientService","getAllClients","projectServices","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","splice","Subtitle","clearInterval","update","Text","filter","includes","Footer","AddProjects","rate","invoice","setProject","setClient","setProjectError","newProject","newProjectError","projectsServices","isProjectValid","min","Projects","align","viewDetails","original","editProject","deleteProject","url","EditProjects","prop","useParams","split","selected","ViewProject","AddClient","validateClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","addNewClient","onClickBack","businessDescription","country","region","val","validateClientName","OrganizationName","WebsiteName","EmailId","Street","BusinessDescription","validatebusinessDescription","PostalCode","MeetingPlatform","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","viewOneClient","editDetails","deleteDetails","deleteClient","newdetails","Emailid","handleNewClient","Organization","bind","newDetails","EditClient","onUpdate","editClient","clientId","ClientId","Country","Region","ViewClient","Testimonials","deleteTestimonial","clientServices","testimonial","setTestimonial","testimonialServices","mailInfo","setMailInfo","newRequest","lgShow","setLgShow","xs","size","aria-labelledby","cli","proj","Form_Link","link","sendEmail","RequestTestimonial","param","feedback","setFeedback","newFeedback","Invoices","editInvoice","invoicenumber","viewInvoice","deleteInvoice","deleteinvoice","getAllInvoices","checkbox","generateddate","fromdate","todate","duedate","clientname","projectname","paymentstatus","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","completeTasks","incompleteTasks","getAllTasks","completeTask","incompleteTask","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","setEvents","calendarServices","newEvents","dateTime","time","calendarEvent","setCalendarEvent","calendarEventError","setCalendarEventError","newCalendarEvent","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","dateStr","newCalendarEventError","isEventValid","EditInvoice","updateInvoice","cancel","taskstartDate","paymentPreStatus","BusinessCardFront","apiData","BusinessCardBack","BusinessClassDisplay","flipOnHover","display","justifyContent","height","profileData","testimonialData","BusinessCard","exportAsSide","side","exportSide","componentRef","React","createRef","ButtonGroup","Fragment","ref","exportComponentAsJPEG","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6b5c3f.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container fixed-top\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">\n                    <i className=\"fab fa-angellist\"></i> Freelance Dashboard\n                </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">\n                        <i className=\"fas fa-sign-in-alt\"></i> Login\n                    </Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">\n                        <i className=\"fas fa-user-plus\"></i> Register\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\n// Page Wrapper for Application Pages\nconst AppLayout =({children}) =>{\n\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main className=\"mt-5 pt-2\">\n                {children}\n            </main>\n            <hr/>\n            <footer className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <p>All rights reserved.</p>\n                    </div>\n                    <div className=\"col text-right\">\n                        <ul className=\"nav justify-content-end\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" aria-current=\"page\" href=\"/about\">About</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/tnc\">Term and Conditions</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/privacy\">Privacy Policy</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/sitemap.xml\">Sitemap</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default AppLayout;","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import axios from \"axios\";\n\nexport class notificationService {\n    async fetchNotifications(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/notification/List\", object );\n        return result;\n    }\n\n    async setStatus(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['eventName'] = data.value.eventName\n        object['category'] = data.value.category\n        const result = await axios.post(\"/api/notification/setStatus\", object);\n        return result;\n    }\n}\n\nexport default new notificationService()","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Notification details.\n */\n\nimport \"../styles/DashboardNavbar.scss\";\nimport {Dropdown, Modal} from \"react-bootstrap\";\nimport React,  {Component} from 'react';\nimport NotificationService from \"../services/notificationService\"\nimport { withRouter } from \"react-router\";\nimport moment from \"moment\";\n\nclass Notification extends Component\n{\n    //constructor for props\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            value: {},\n            notificationShow: false\n        };\n\n        this.userId = localStorage.getItem(\"user_id\");\n        this.currentDate = moment().format('YYYY-MM-DD')\n    }\n\n    /**\n     * On call of fetch notification the API call has beeen made and all notification setup in calendar will be fetched\n     * @param {*} event \n    */\n    fetchNotifications(){\n       \n        NotificationService.fetchNotifications({\"currentDate\": this.currentDate, \"userId\": this.userId}).then((response) => {\n            let notifications = [];\n            response.data.forEach(element => {\n                let item = {};\n                item.eventName = element.eventName;\n                item.category = element.category;\n                item.viewStatus = element.viewStatus;\n                item.className = item.viewStatus ? \"\" : 'text-primary';\n                notifications.push(item)\n            });\n            this.setState({\n                values: notifications\n            });\n        }).catch((error) => {\n            console.log(\"Error\")\n        })\n    }\n\n    /**\n     * On mount, fetch the details of notification.\n     * @param {*} event \n    */\n    componentDidMount() {\n        this.fetchNotifications();\n    }\n\n    /**\n     * On handlenotification close the modal status will be set false\n     * @param {*} event \n    */\n    handleNotificationClose(){\n        this.setState({notificationShow:false});\n    };\n\n    /**\n     * On handlenotification show the modal status will be set true\n     * @param {*} event \n    */\n    handleNotificationShow(){\n        this.setState({notificationShow:true});\n    };\n\n    /**\n     * Open notification will be called once the notification is opened by user\n     * @param {*} event \n    */\n    openNotification = (value) => {\n        this.setState({value:value});\n        NotificationService.setStatus({\"currentDate\": this.currentDate, \"value\": value}).then((response) => {\n            this.fetchNotifications();\n            this.handleNotificationShow();\n        }).catch((error) => {\n            console.log(\"Error\")\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Dropdown>\n                    <Dropdown.Toggle title=\"Notification\" id=\"bellIcon\">\n                        <i className=\"fas fa-bell\"/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu id=\"notificationPanel\" >\n                        {this.state.values.map((value,index) => {\n                            return <Dropdown.Item className=\"border-bottom\" onClick = { () => this.openNotification(value)}>\n                                <span className={value.className} >{value.eventName}</span>\n                            </Dropdown.Item>\n                        })}\n                    </Dropdown.Menu>\n                </Dropdown>\n                <Modal show={this.state.notificationShow} onHide={() => this.handleNotificationClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.value.category}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.value.eventName}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Notification)\n","/* Author: Vishal Sancheti */\n\nimport {Accordion, Container,  CustomToggle, Card, Dropdown, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Notification from \"../components/Notification\";\nexport default function DashboardNavbar(){\n  \n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">\n                    <i className=\"fab fa-angellist\"></i> Freelance Dashboard\n                </Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" >\n                    <Notification/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\"  onClick={ () => {localStorage.removeItem('user_id')} } href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport '../styles/style.scss';\nimport React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\nimport { useLocation } from 'react-router-dom'\n\nexport default function Sidebar(props) {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    return (\n        <Drawer {...props}>\n            <Drawer.Toggle onClick={handleToggle} />\n\n            <Collapse in={open}>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Item href=\"/dashboard\">\n                            <span className={location.pathname === \"/dashboard\" ? 'nav-item-active' : ''}>\n                                <i className=\"fas fa-tachometer-alt\"></i> Dashboard\n                            </span>\n                        </Drawer.Item>\n\n                        <Drawer.Nav>\n                            <Drawer.Item href=\"/clients\">\n                                <span className={location.pathname === \"/clients\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-users\"></i> Clients\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/projects\">\n                                <span className={location.pathname === \"/projects\" ? \"nav-item-active\" : ''}>\n                                    <i className=\"fas fa-briefcase\"></i> Projects\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/timelogs\">\n                                <span className={location.pathname === \"/timelogs\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-stopwatch\"></i> Time Logs\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoices\">\n                                <span className={location.pathname === \"/invoices\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-file-invoice\"></i> Invoices\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/testimonials\">\n                                <span className={location.pathname === \"/testimonials\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-comment\"></i> Testimonials\n                                </span>\n                            </Drawer.Item>\n\n                            <hr/>\n\n                            <Drawer.Item href=\"/todolist\">\n                                <span className={location.pathname === \"/todolist\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-tasks\"></i> ToDo\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/calendar\">\n                                <span className={location.pathname === \"/calendar\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-calendar\"></i> Calendar\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/business-card\">\n                                <span className={location.pathname === \"/business-card\" ? 'nav-item-active' : ''}>\n                                    <i class=\"fas fa-address-card\"></i> Business Card\n                                </span>\n                            </Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","/* Author: Vishal Sancheti */\n\nimport React, { useEffect } from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\n\n// Page Wrapper for Dashboard Pages\nconst DashboardLayout =({children}) =>{\n    const history = useHistory();\n\n    useEffect(() => {\n        let user = localStorage.getItem('user_id')\n        if(!user){\n            history.push('/login')\n        }\n\n    },[]);\n\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <h1 className=\"display-4\">Hello, Freelancer!</h1>\n                    <p className=\"lead\">This is the only tool you will be using, a one stop solution for all your freelacing needs.</p>\n                    <hr className=\"my-4\"/>\n                    <p className=\"lead\">Minimal UI with Powerful features.</p>\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Get Started</a>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>What we offer?</h2>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tachometer-alt\"></i> Dashboard</h4>\n                        <p>Visualize all your stats and report from single screen.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-users\"></i> Client Management</h4>\n                        <p>No more address book entries, easily maintain clients and their details.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-briefcase\"></i> Project Management</h4>\n                        <p>No more looking searching emails, efficiently maintain client project association and details.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-stopwatch\"></i> Time Logging</h4>\n                        <p>No more maintaining spreadsheet, easily log times with our interactive time logging.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-file-invoice\"></i> Invoice Management</h4>\n                        <p>No more filtering spreadsheet for invoice, easily make invoices.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-comment\"></i> Testimonial Management</h4>\n                        <p>No more missing out testimonials from clients, easily request and maintain testimonials.</p>\n                    </div>\n\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tasks\"></i> ToDo List</h4>\n                        <p>No more sticky notes, easily maitain your todo task with interactive todo list.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-calendar\"></i> Calendar</h4>\n                        <p>No more mixing of personal and business events, easily manage events with our full fledged calendar.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-id-card\"></i> Digital Business Card</h4>\n                        <p>Easily create and share your digital business card with client testimonials.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-bell\"></i> Notifications</h4>\n                        <p>Never miss a calendar event, invoice due date, and other events with our notifications.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function About(){\n    return (\n        <div className=\"container\">\n            <div className=\"row pt-3\">\n                <div className=\"col\">\n                    <h1>About us</h1>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"row justify-content-center\">\n                <div className=\"col\">\n                    <p>We are team of students enrolled at Dalhousie University and this is a project submitted for subject CSCI 5709.</p>\n                </div>\n            </div>\n            <div className=\"row pt-3\">\n                <div className=\"col\">\n                    <h3>Team</h3>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Bansi Mehta</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00875640</p>\n                            <a href={'mailto:bn955101@dal.ca'} className=\"card-link\">bn955101@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Deep Patel</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00865413</p>\n                            <a href={'mailto:dp889845@dal.ca'} className=\"card-link\">dp889845@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Janvi Patel</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00863421</p>\n                            <a href={'mailto:jn410076@dal.ca'} className=\"card-link\">jn410076@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Sanket Shah</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00862499</p>\n                            <a href={'mailto:sn488207@dal.ca'} className=\"card-link\">sn488207@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Tejaswi Chaudhary</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00858613</p>\n                            <a href={'mailto:tj754396@dal.ca'} className=\"card-link\">tj754396@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"card m-1\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Vishal Sancheti</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Full-stack Developer</h6>\n                            <p className=\"card-text\">B00877378</p>\n                            <a href={'mailto:vs488310@dal.ca'} className=\"card-link\">vs488310@dal.ca</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Tnc(){\n    return (\n        <div className=\"container\">\n            <div className=\"row pt-3\">\n                <div className=\"col\">\n                    <h1>Terms and Conditions</h1>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"row justify-content-center\">\n                <div className=\"col\">\n                    <h3><strong>Welcome to Freelance Dashboard!</strong></h3>\n\n                    <p>These terms and conditions outline the rules and regulations for the use of Team 5's Website, located at https://csci5709-group5-s21.herokuapp.com.</p>\n\n                    <p>By accessing this website we assume you accept these terms and conditions. Do not continue to use Freelance Dashboard if you do not agree to take all of the terms and conditions stated on this page.</p>\n\n                    <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to the Company’s terms and conditions. \"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company. \"Party\", \"Parties\", or \"Us\", refers to both the Client and ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of provision of the Company’s stated services, in accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in the singular, plural, capitalization and/or he/she or they, are taken as interchangeable and therefore as referring to same.</p>\n\n                    <h3><strong>Cookies</strong></h3>\n\n                    <p>We employ the use of cookies. By accessing Freelance Dashboard, you agreed to use cookies in agreement with the Team 5's Privacy Policy. </p>\n\n                    <p>Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by our website to enable the functionality of certain areas to make it easier for people visiting our website. Some of our affiliate/advertising partners may also use cookies.</p>\n\n                    <h3><strong>License</strong></h3>\n\n                    <p>Unless otherwise stated, Team 5 and/or its licensors own the intellectual property rights for all material on Freelance Dashboard. All intellectual property rights are reserved. You may access this from Freelance Dashboard for your own personal use subjected to restrictions set in these terms and conditions.</p>\n\n                    <p>You must not:</p>\n                    <ul>\n                        <li>Republish material from Freelance Dashboard</li>\n                        <li>Sell, rent or sub-license material from Freelance Dashboard</li>\n                        <li>Reproduce, duplicate or copy material from Freelance Dashboard</li>\n                        <li>Redistribute content from Freelance Dashboard</li>\n                    </ul>\n\n                    <p>This Agreement shall begin on the date hereof. Our Terms and Conditions were created with the help of the <a href=\"https://www.termsandconditionsgenerator.com\">Terms And Conditions Generator</a>.</p>\n\n                    <p>Parts of this website offer an opportunity for users to post and exchange opinions and information in certain areas of the website. Team 5 does not filter, edit, publish or review Comments prior to their presence on the website. Comments do not reflect the views and opinions of Team 5,its agents and/or affiliates. Comments reflect the views and opinions of the person who post their views and opinions. To the extent permitted by applicable laws, Team 5 shall not be liable for the Comments or for any liability, damages or expenses caused and/or suffered as a result of any use of and/or posting of and/or appearance of the Comments on this website.</p>\n\n                    <p>Team 5 reserves the right to monitor all Comments and to remove any Comments which can be considered inappropriate, offensive or causes breach of these Terms and Conditions.</p>\n\n                    <p>You warrant and represent that:</p>\n\n                    <ul>\n                        <li>You are entitled to post the Comments on our website and have all necessary licenses and consents to do so;</li>\n                        <li>The Comments do not invade any intellectual property right, including without limitation copyright, patent or trademark of any third party;</li>\n                        <li>The Comments do not contain any defamatory, libelous, offensive, indecent or otherwise unlawful material which is an invasion of privacy</li>\n                        <li>The Comments will not be used to solicit or promote business or custom or present commercial activities or unlawful activity.</li>\n                    </ul>\n\n                    <p>You hereby grant Team 5 a non-exclusive license to use, reproduce, edit and authorize others to use, reproduce and edit any of your Comments in any and all forms, formats or media.</p>\n\n                    <h3><strong>Hyperlinking to our Content</strong></h3>\n\n                    <p>The following organizations may link to our Website without prior written approval:</p>\n\n                    <ul>\n                        <li>Government agencies;</li>\n                        <li>Search engines;</li>\n                        <li>News organizations;</li>\n                        <li>Online directory distributors may link to our Website in the same manner as they hyperlink to the Websites of other listed businesses; and</li>\n                        <li>System wide Accredited Businesses except soliciting non-profit organizations, charity shopping malls, and charity fundraising groups which may not hyperlink to our Web site.</li>\n                    </ul>\n\n                    <p>These organizations may link to our home page, to publications or to other Website information so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products and/or services; and (c) fits within the context of the linking party’s site.</p>\n\n                    <p>We may consider and approve other link requests from the following types of organizations:</p>\n\n                    <ul>\n                        <li>commonly-known consumer and/or business information sources;</li>\n                        <li>dot.com community sites;</li>\n                        <li>associations or other groups representing charities;</li>\n                        <li>online directory distributors;</li>\n                        <li>internet portals;</li>\n                        <li>accounting, law and consulting firms; and</li>\n                        <li>educational institutions and trade associations.</li>\n                    </ul>\n\n                    <p>We will approve link requests from these organizations if we decide that: (a) the link would not make us look unfavorably to ourselves or to our accredited businesses; (b) the organization does not have any negative records with us; (c) the benefit to us from the visibility of the hyperlink compensates the absence of Team 5; and (d) the link is in the context of general resource information.</p>\n\n                    <p>These organizations may link to our home page so long as the link: (a) is not in any way deceptive; (b) does not falsely imply sponsorship, endorsement or approval of the linking party and its products or services; and (c) fits within the context of the linking party’s site.</p>\n\n                    <p>If you are one of the organizations listed in paragraph 2 above and are interested in linking to our website, you must inform us by sending an e-mail to Team 5. Please include your name, your organization name, contact information as well as the URL of your site, a list of any URLs from which you intend to link to our Website, and a list of the URLs on our site to which you would like to link. Wait 2-3 weeks for a response.</p>\n\n                    <p>Approved organizations may hyperlink to our Website as follows:</p>\n\n                    <ul>\n                        <li>By use of our corporate name; or</li>\n                        <li>By use of the uniform resource locator being linked to; or</li>\n                        <li>By use of any other description of our Website being linked to that makes sense within the context and format of content on the linking party’s site.</li>\n                    </ul>\n\n                    <p>No use of Team 5's logo or other artwork will be allowed for linking absent a trademark license agreement.</p>\n\n                    <h3><strong>iFrames</strong></h3>\n\n                    <p>Without prior approval and written permission, you may not create frames around our Webpages that alter in any way the visual presentation or appearance of our Website.</p>\n\n                    <h3><strong>Content Liability</strong></h3>\n\n                    <p>We shall not be hold responsible for any content that appears on your Website. You agree to protect and defend us against all claims that is rising on your Website. No link(s) should appear on any Website that may be interpreted as libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the infringement or other violation of, any third party rights.</p>\n\n                    <h3><strong>Your Privacy</strong></h3>\n\n                    <p>Please read Privacy Policy</p>\n\n                    <h3><strong>Reservation of Rights</strong></h3>\n\n                    <p>We reserve the right to request that you remove all links or any particular link to our Website. You approve to immediately remove all links to our Website upon request. We also reserve the right to amen these terms and conditions and it’s linking policy at any time. By continuously linking to our Website, you agree to be bound to and follow these linking terms and conditions.</p>\n\n                    <h3><strong>Removal of links from our website</strong></h3>\n\n                    <p>If you find any link on our Website that is offensive for any reason, you are free to contact and inform us any moment. We will consider requests to remove links but we are not obligated to or so or to respond to you directly.</p>\n\n                    <p>We do not ensure that the information on this website is correct, we do not warrant its completeness or accuracy; nor do we promise to ensure that the website remains available or that the material on the website is kept up to date.</p>\n\n                    <h3><strong>Disclaimer</strong></h3>\n\n                    <p>To the maximum extent permitted by applicable law, we exclude all representations, warranties and conditions relating to our website and the use of this website. Nothing in this disclaimer will:</p>\n\n                    <ul>\n                        <li>limit or exclude our or your liability for death or personal injury;</li>\n                        <li>limit or exclude our or your liability for fraud or fraudulent misrepresentation;</li>\n                        <li>limit any of our or your liabilities in any way that is not permitted under applicable law; or</li>\n                        <li>exclude any of our or your liabilities that may not be excluded under applicable law.</li>\n                    </ul>\n\n                    <p>The limitations and prohibitions of liability set in this Section and elsewhere in this disclaimer: (a) are subject to the preceding paragraph; and (b) govern all liabilities arising under the disclaimer, including liabilities arising in contract, in tort and for breach of statutory duty.</p>\n\n                    <p>As long as the website and the information and services on the website are provided free of charge, we will not be liable for any loss or damage of any nature.</p>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function Privacy(){\n    return (\n        <div className=\"container\">\n            <div className=\"row pt-3\">\n                <div className=\"col\">\n                    <h1>Privacy Policy</h1>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"row justify-content-center\">\n                <div className=\"col\">\n                    <p>Last updated: August 01, 2021</p>\n                    <p>This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.</p>\n                    <p>We use Your Personal data to provide and improve the Service. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy. This Privacy Policy has been created with the help of the <a href=\"https://www.termsfeed.com/privacy-policy-generator/\" target=\"_blank\">Privacy Policy Generator</a>.</p>\n                    <h1>Interpretation and Definitions</h1>\n                    <h2>Interpretation</h2>\n                    <p>The words of which the initial letter is capitalized have meanings defined under the following conditions. The following definitions shall have the same meaning regardless of whether they appear in singular or in plural.</p>\n                    <h2>Definitions</h2>\n                    <p>For the purposes of this Privacy Policy:</p>\n                    <ul>\n                        <li>\n                            <p><strong>Account</strong> means a unique account created for You to access our Service or parts of our Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>Company</strong> (referred to as either &quot;the Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in this Agreement) refers to Freelance Dashboard.</p>\n                        </li>\n                        <li>\n                            <p><strong>Cookies</strong> are small files that are placed on Your computer, mobile device or any other device by a website, containing the details of Your browsing history on that website among its many uses.</p>\n                        </li>\n                        <li>\n                            <p><strong>Country</strong> refers to: Nova Scotia,  Canada</p>\n                        </li>\n                        <li>\n                            <p><strong>Device</strong> means any device that can access the Service such as a computer, a cellphone or a digital tablet.</p>\n                        </li>\n                        <li>\n                            <p><strong>Personal Data</strong> is any information that relates to an identified or identifiable individual.</p>\n                        </li>\n                        <li>\n                            <p><strong>Service</strong> refers to the Website.</p>\n                        </li>\n                        <li>\n                            <p><strong>Service Provider</strong> means any natural or legal person who processes the data on behalf of the Company. It refers to third-party companies or individuals employed by the Company to facilitate the Service, to provide the Service on behalf of the Company, to perform services related to the Service or to assist the Company in analyzing how the Service is used.</p>\n                        </li>\n                        <li>\n                            <p><strong>Third-party Social Media Service</strong> refers to any website or any social network website through which a User can log in or create an account to use the Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>Usage Data</strong> refers to data collected automatically, either generated by the use of the Service or from the Service infrastructure itself (for example, the duration of a page visit).</p>\n                        </li>\n                        <li>\n                            <p><strong>Website</strong> refers to Freelance Dashboard, accessible from <a href=\"https://csci5709-group5-s21.herokuapp.com/\" rel=\"external nofollow noopener\" target=\"_blank\">https://csci5709-group5-s21.herokuapp.com/</a></p>\n                        </li>\n                        <li>\n                            <p><strong>You</strong> means the individual accessing or using the Service, or the company, or other legal entity on behalf of which such individual is accessing or using the Service, as applicable.</p>\n                        </li>\n                    </ul>\n                    <h1>Collecting and Using Your Personal Data</h1>\n                    <h2>Types of Data Collected</h2>\n                    <h3>Personal Data</h3>\n                    <p>While using Our Service, We may ask You to provide Us with certain personally identifiable information that can be used to contact or identify You. Personally identifiable information may include, but is not limited to:</p>\n                    <ul>\n                        <li>\n                            <p>Email address</p>\n                        </li>\n                        <li>\n                            <p>First name and last name</p>\n                        </li>\n                        <li>\n                            <p>Phone number</p>\n                        </li>\n                        <li>\n                            <p>Usage Data</p>\n                        </li>\n                    </ul>\n                    <h3>Usage Data</h3>\n                    <p>Usage Data is collected automatically when using the Service.</p>\n                    <p>Usage Data may include information such as Your Device's Internet Protocol address (e.g. IP address), browser type, browser version, the pages of our Service that You visit, the time and date of Your visit, the time spent on those pages, unique device identifiers and other diagnostic data.</p>\n                    <p>When You access the Service by or through a mobile device, We may collect certain information automatically, including, but not limited to, the type of mobile device You use, Your mobile device unique ID, the IP address of Your mobile device, Your mobile operating system, the type of mobile Internet browser You use, unique device identifiers and other diagnostic data.</p>\n                    <p>We may also collect information that Your browser sends whenever You visit our Service or when You access the Service by or through a mobile device.</p>\n                    <h3>Information from Third-Party Social Media Services</h3>\n                    <p>The Company allows You to create an account and log in to use the Service through the following Third-party Social Media Services:</p>\n                    <ul>\n                        <li>Google</li>\n                        <li>Facebook</li>\n                        <li>Twitter</li>\n                    </ul>\n                    <p>If You decide to register through or otherwise grant us access to a Third-Party Social Media Service, We may collect Personal data that is already associated with Your Third-Party Social Media Service's account, such as Your name, Your email address, Your activities or Your contact list associated with that account.</p>\n                    <p>You may also have the option of sharing additional information with the Company through Your Third-Party Social Media Service's account. If You choose to provide such information and Personal Data, during registration or otherwise, You are giving the Company permission to use, share, and store it in a manner consistent with this Privacy Policy.</p>\n                    <h3>Tracking Technologies and Cookies</h3>\n                    <p>We use Cookies and similar tracking technologies to track the activity on Our Service and store certain information. Tracking technologies used are beacons, tags, and scripts to collect and track information and to improve and analyze Our Service. The technologies We use may include:</p>\n                    <ul>\n                        <li><strong>Cookies or Browser Cookies.</strong> A cookie is a small file placed on Your Device. You can instruct Your browser to refuse all Cookies or to indicate when a Cookie is being sent. However, if You do not accept Cookies, You may not be able to use some parts of our Service. Unless you have adjusted Your browser setting so that it will refuse Cookies, our Service may use Cookies.</li>\n                        <li><strong>Flash Cookies.</strong> Certain features of our Service may use local stored objects (or Flash Cookies) to collect and store information about Your preferences or Your activity on our Service. Flash Cookies are not managed by the same browser settings as those used for Browser Cookies. For more information on how You can delete Flash Cookies, please read &quot;Where can I change the settings for disabling, or deleting local shared objects?&quot; available at <a href=\"https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_\" rel=\"external nofollow noopener\" target=\"_blank\">https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_</a></li>\n                        <li><strong>Web Beacons.</strong> Certain sections of our Service and our emails may contain small electronic files known as web beacons (also referred to as clear gifs, pixel tags, and single-pixel gifs) that permit the Company, for example, to count users who have visited those pages or opened an email and for other related website statistics (for example, recording the popularity of a certain section and verifying system and server integrity).</li>\n                    </ul>\n                    <p>Cookies can be &quot;Persistent&quot; or &quot;Session&quot; Cookies. Persistent Cookies remain on Your personal computer or mobile device when You go offline, while Session Cookies are deleted as soon as You close Your web browser. You can learn more about cookies here: <a href=\"https://www.termsfeed.com/blog/cookies/\" target=\"_blank\">All About Cookies by TermsFeed</a>.</p>\n                    <p>We use both Session and Persistent Cookies for the purposes set out below:</p>\n                    <ul>\n                        <li>\n                            <p><strong>Necessary / Essential Cookies</strong></p>\n                            <p>Type: Session Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies are essential to provide You with services available through the Website and to enable You to use some of its features. They help to authenticate users and prevent fraudulent use of user accounts. Without these Cookies, the services that You have asked for cannot be provided, and We only use these Cookies to provide You with those services.</p>\n                        </li>\n                        <li>\n                            <p><strong>Cookies Policy / Notice Acceptance Cookies</strong></p>\n                            <p>Type: Persistent Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies identify if users have accepted the use of cookies on the Website.</p>\n                        </li>\n                        <li>\n                            <p><strong>Functionality Cookies</strong></p>\n                            <p>Type: Persistent Cookies</p>\n                            <p>Administered by: Us</p>\n                            <p>Purpose: These Cookies allow us to remember choices You make when You use the Website, such as remembering your login details or language preference. The purpose of these Cookies is to provide You with a more personal experience and to avoid You having to re-enter your preferences every time You use the Website.</p>\n                        </li>\n                    </ul>\n                    <p>For more information about the cookies we use and your choices regarding cookies, please visit our Cookies Policy or the Cookies section of our Privacy Policy.</p>\n                    <h2>Use of Your Personal Data</h2>\n                    <p>The Company may use Personal Data for the following purposes:</p>\n                    <ul>\n                        <li>\n                            <p><strong>To provide and maintain our Service</strong>, including to monitor the usage of our Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>To manage Your Account:</strong> to manage Your registration as a user of the Service. The Personal Data You provide can give You access to different functionalities of the Service that are available to You as a registered user.</p>\n                        </li>\n                        <li>\n                            <p><strong>For the performance of a contract:</strong> the development, compliance and undertaking of the purchase contract for the products, items or services You have purchased or of any other contract with Us through the Service.</p>\n                        </li>\n                        <li>\n                            <p><strong>To contact You:</strong> To contact You by email, telephone calls, SMS, or other equivalent forms of electronic communication, such as a mobile application's push notifications regarding updates or informative communications related to the functionalities, products or contracted services, including the security updates, when necessary or reasonable for their implementation.</p>\n                        </li>\n                        <li>\n                            <p><strong>To provide You</strong> with news, special offers and general information about other goods, services and events which we offer that are similar to those that you have already purchased or enquired about unless You have opted not to receive such information.</p>\n                        </li>\n                        <li>\n                            <p><strong>To manage Your requests:</strong> To attend and manage Your requests to Us.</p>\n                        </li>\n                        <li>\n                            <p><strong>For business transfers:</strong> We may use Your information to evaluate or conduct a merger, divestiture, restructuring, reorganization, dissolution, or other sale or transfer of some or all of Our assets, whether as a going concern or as part of bankruptcy, liquidation, or similar proceeding, in which Personal Data held by Us about our Service users is among the assets transferred.</p>\n                        </li>\n                        <li>\n                            <p><strong>For other purposes</strong>: We may use Your information for other purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Service, products, services, marketing and your experience.</p>\n                        </li>\n                    </ul>\n                    <p>We may share Your personal information in the following situations:</p>\n                    <ul>\n                        <li><strong>With Service Providers:</strong> We may share Your personal information with Service Providers to monitor and analyze the use of our Service,  to contact You.</li>\n                        <li><strong>For business transfers:</strong> We may share or transfer Your personal information in connection with, or during negotiations of, any merger, sale of Company assets, financing, or acquisition of all or a portion of Our business to another company.</li>\n                        <li><strong>With Affiliates:</strong> We may share Your information with Our affiliates, in which case we will require those affiliates to honor this Privacy Policy. Affiliates include Our parent company and any other subsidiaries, joint venture partners or other companies that We control or that are under common control with Us.</li>\n                        <li><strong>With business partners:</strong> We may share Your information with Our business partners to offer You certain products, services or promotions.</li>\n                        <li><strong>With other users:</strong> when You share personal information or otherwise interact in the public areas with other users, such information may be viewed by all users and may be publicly distributed outside. If You interact with other users or register through a Third-Party Social Media Service, Your contacts on the Third-Party Social Media Service may see Your name, profile, pictures and description of Your activity. Similarly, other users will be able to view descriptions of Your activity, communicate with You and view Your profile.</li>\n                        <li><strong>With Your consent</strong>: We may disclose Your personal information for any other purpose with Your consent.</li>\n                    </ul>\n                    <h2>Retention of Your Personal Data</h2>\n                    <p>The Company will retain Your Personal Data only for as long as is necessary for the purposes set out in this Privacy Policy. We will retain and use Your Personal Data to the extent necessary to comply with our legal obligations (for example, if we are required to retain your data to comply with applicable laws), resolve disputes, and enforce our legal agreements and policies.</p>\n                    <p>The Company will also retain Usage Data for internal analysis purposes. Usage Data is generally retained for a shorter period of time, except when this data is used to strengthen the security or to improve the functionality of Our Service, or We are legally obligated to retain this data for longer time periods.</p>\n                    <h2>Transfer of Your Personal Data</h2>\n                    <p>Your information, including Personal Data, is processed at the Company's operating offices and in any other places where the parties involved in the processing are located. It means that this information may be transferred to — and maintained on — computers located outside of Your state, province, country or other governmental jurisdiction where the data protection laws may differ than those from Your jurisdiction.</p>\n                    <p>Your consent to this Privacy Policy followed by Your submission of such information represents Your agreement to that transfer.</p>\n                    <p>The Company will take all steps reasonably necessary to ensure that Your data is treated securely and in accordance with this Privacy Policy and no transfer of Your Personal Data will take place to an organization or a country unless there are adequate controls in place including the security of Your data and other personal information.</p>\n                    <h2>Disclosure of Your Personal Data</h2>\n                    <h3>Business Transactions</h3>\n                    <p>If the Company is involved in a merger, acquisition or asset sale, Your Personal Data may be transferred. We will provide notice before Your Personal Data is transferred and becomes subject to a different Privacy Policy.</p>\n                    <h3>Law enforcement</h3>\n                    <p>Under certain circumstances, the Company may be required to disclose Your Personal Data if required to do so by law or in response to valid requests by public authorities (e.g. a court or a government agency).</p>\n                    <h3>Other legal requirements</h3>\n                    <p>The Company may disclose Your Personal Data in the good faith belief that such action is necessary to:</p>\n                    <ul>\n                        <li>Comply with a legal obligation</li>\n                        <li>Protect and defend the rights or property of the Company</li>\n                        <li>Prevent or investigate possible wrongdoing in connection with the Service</li>\n                        <li>Protect the personal safety of Users of the Service or the public</li>\n                        <li>Protect against legal liability</li>\n                    </ul>\n                    <h2>Security of Your Personal Data</h2>\n                    <p>The security of Your Personal Data is important to Us, but remember that no method of transmission over the Internet, or method of electronic storage is 100% secure. While We strive to use commercially acceptable means to protect Your Personal Data, We cannot guarantee its absolute security.</p>\n                    <h1>Children's Privacy</h1>\n                    <p>Our Service does not address anyone under the age of 13. We do not knowingly collect personally identifiable information from anyone under the age of 13. If You are a parent or guardian and You are aware that Your child has provided Us with Personal Data, please contact Us. If We become aware that We have collected Personal Data from anyone under the age of 13 without verification of parental consent, We take steps to remove that information from Our servers.</p>\n                    <p>If We need to rely on consent as a legal basis for processing Your information and Your country requires consent from a parent, We may require Your parent's consent before We collect and use that information.</p>\n                    <h1>Links to Other Websites</h1>\n                    <p>Our Service may contain links to other websites that are not operated by Us. If You click on a third party link, You will be directed to that third party's site. We strongly advise You to review the Privacy Policy of every site You visit.</p>\n                    <p>We have no control over and assume no responsibility for the content, privacy policies or practices of any third party sites or services.</p>\n                    <h1>Changes to this Privacy Policy</h1>\n                    <p>We may update Our Privacy Policy from time to time. We will notify You of any changes by posting the new Privacy Policy on this page.</p>\n                    <p>We will let You know via email and/or a prominent notice on Our Service, prior to the change becoming effective and update the &quot;Last updated&quot; date at the top of this Privacy Policy.</p>\n                    <p>You are advised to review this Privacy Policy periodically for any changes. Changes to this Privacy Policy are effective when they are posted on this page.</p>\n                    <h1>Contact Us</h1>\n                    <p>If you have any questions about this Privacy Policy, You can contact us:</p>\n                    <ul>\n                        <li>By email: vs488310@dal.ca</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Deep Patel\n * Created On: 2021-07-28\n */\n\nimport axios from \"axios\"\n\nexport class registerService {\n\n   async addNewUser(data) {\n      const result = await axios.post('/api/register/add', data);\n      return result.data;\n   }\n\n   async validateUser(user){\n      const result = await axios.post(\"/api/register/validateUser\", user);\n      return result.data;\n   }\n\n   async resetPassword(user){\n      const result = await axios.post(\"/api/register/resetPassword\", user);\n      return result.data;\n   }\n\n   async fetchUser(user) {\n      const result = await axios.post(\"/api/register/fetchUser\", user);\n      return result.data;\n   }\n\n   async fetchUserById(id) {\n      const result = await axios.post(\"/api/register/fetchUserById\", { id: id });\n      return result.data;\n   }\n\n   async editUser(user){\n    const result = await axios.put(\"/api/register/edit/\"+user.id, user);\n    return result.data;\n    }\n}\n\nexport default new registerService()","import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Button, Form} from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\nimport emailjs from 'emailjs-com';\n\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const [loginErrors, setLoginErrors] = useState({\n        emailError: \"\",\n        passwordError: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newLogin = {...loginData, [e.target.name]: e.target.value};\n        setLoginData(newLogin);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        let valid = true;\n\n        setLoginErrors({\n            emailError: \"\",\n            passwordError: \"\"\n        });\n\n        let newLoginError = {...loginErrors};\n\n        if(loginData.email === \"\"){\n            newLoginError.emailError = \"Please enter email!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.emailError = \"\";\n            setLoginErrors(newLoginError);\n        }\n\n        if(loginData.password === \"\"){\n            newLoginError.passwordError = \"Please enter Password!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.passwordError = \"\";\n            setLoginErrors(newLoginError);\n        }\n\n        if(valid === true){\n            registerServices.validateUser(loginData)\n                .then((response) => {\n                    if(response.success) {\n                        localStorage.setItem('user_id', response.data._id);\n                        alert(response.message);\n                        history.push(\"/dashboard\");\n                    }else{\n                        alert(response.message);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert(\"Some error occurred\");\n                })\n        }\n    };\n\n    const handleMail = async (e) =>{\n        loginData.email = prompt(\"Enter Your Email:\");\n\n        registerServices.resetPassword(loginData).then((response) => {\n            if(response.success) {\n                let mailParams = response.data;\n\n                // calling emailJS functionality with emailJS Credentials\n                emailjs.send(\n                    'testimonial_request',\n                    'template_fmwc5oo',\n                    mailParams,\n                    'user_INB1ILGAt4GVje2eeyj2V')\n                    .then(function (response) {\n                        alert(\"Email Sent\");\n                        console.log('SUCCESS!', response.status, response.text);\n                    }, function (error) {\n                        alert(\"Error: \" + error);\n                        console.log('FAILED...', error);\n                    });\n            }else{\n                alert(\"User not found!\");\n            }\n        }).catch((error) => {\n            alert(\"Some error occurred!!\");\n            console.log(\"Error:\",error)\n        });\n    };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" >\n                <div className=\"col-md-3\"/>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Email</Form.Label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Please enter email \"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.emailError}</p>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Password</Form.Label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Please enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.passwordError}</p>\n\n                        <div className=\"form-group\">\n                            <div>\n                            </div>\n                        </div>\n\n                        <Button type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                            <div><a href=\"#\"> <p onClick={handleMail}>Forgot password?</p></a></div>\n                        </p>\n                    </form>\n                </div>\n                <div className=\"col-md-3\"/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n    const checkMobile = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        mobileError:'',\n        linkedinError:'',\n        websiteError:'',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            mobileError:'',\n            linkedinError:'',\n            websiteError:'',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n        if(registrationInfo.mobile === \"\"){\n            newRegError.mobileError = \"Please enter Contact Number!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkMobile.test(registrationInfo.mobile)){\n                newRegError.mobileError = \"Contact number Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.mobileError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.linkedin === \"\"){\n            newRegError.linkedinError = \"Please enter linkedin!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.linkedinError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n\n            registerServices.addNewUser(registrationInfo).then((response) => {\n                if(response){\n                    alert(\"Registration Successful!!\");\n                    history.push(\"/login\");\n                }\n            }).catch((error) => {\n                console.log(\"Error:\",error)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Contact Number</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter mobile number\"\n                                id = \"mobile\"\n                                name = \"mobile\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.mobileError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\"> LinkedIn Profile</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter linkedIn profile link\"\n                                id = \"linkedin\"\n                                name = \"linkedin\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.linkedinError}</p>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                        <Form.Label> Website</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter website link\"\n                                id = \"website\"\n                                name = \"website\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.websiteError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class dashboardService{\n    // Get stat counts\n    async stats(data){\n        const result = await axios.get(\"/api/dashboard/stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get client project count\n    async clientProjects(data){\n        const result = await axios.get(\"/api/dashboard/client-projects\",{ params: data });\n        return result.data;\n    };\n\n    // Get client invoice stats\n    async clientInvoiceStats(data){\n        const result = await axios.get(\"/api/dashboard/client-invoice-stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get timelog stats\n    async timelogStats(data){\n        const result = await axios.get(\"/api/dashboard/timelog-stats\",{ params: data });\n        return result.data;\n    };\n}\n\nexport default new dashboardService()","import React, {useEffect, useState} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Line, Bar, Doughnut} from \"react-chartjs-2\";\nimport {Card} from \"react-bootstrap\";\nimport dashboardService from \"../services/dashboardService\";\n\nexport default function Dashboard(){\n    const [stats,setStats] = useState({\n        clients: 0,\n        projects:0,\n        invoices:0,\n        testimonials:0,\n    });\n    const [doughnutData,setDoughnutData] = useState({});\n    const [lineData,setLineData] = useState({});\n    const [barData,setBarData] = useState({});\n    useEffect(()=>{\n        dashboardService.stats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setStats(res.data));\n        dashboardService.clientProjects({\"userId\": localStorage.getItem(\"user_id\")}).then(res =>  setDoughnutData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Projects',\n                    data: res.data.projects,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }));\n        dashboardService.clientInvoiceStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setBarData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Paid Invoices',\n                    data: res.data.invoices_paid,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                },\n                {\n                    label: '# of Due Invoices',\n                    data:  res.data.invoices_due,\n                    backgroundColor: 'rgb(54, 162, 235)',\n                },\n            ],\n        }));\n        dashboardService.timelogStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setLineData({\n            labels: res.data.dates,\n            datasets: [\n                {\n                    label: '# of Hours Logged',\n                    data: res.data.durations,\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                },\n            ],\n        }));\n\n    },[]);\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.clients}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Clients</div>\n                                    <div><a href=\"/clients\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.projects}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Projects</div>\n                                    <div><a href=\"/projects\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.invoices}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Invoices</div>\n                                    <div><a href=\"/invoices\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.testimonials}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Testimonials</div>\n                                    <div><a href=\"/testimonials\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>Client and # of Projects</Card.Title>\n                                    <Doughnut data={doughnutData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Line data={lineData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                            <Card>\n                                <Card.Body>\n                                    <Bar data={barData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    //Init\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n                {/*Conditional Display Export CSV Button*/}\n                <Col md={{ span: 2 }} className=\"my-2\">\n                {allowCSV ?\n                    (\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\n                            Export CSV\n                        </CSVLink>\n                   )\n                    : (<></>)\n                }\n                </Col>\n\n                {/*Conditional Display Search Form*/}\n                {allowSearch ?\n                    (<Col md={{ span: 2, offset: 8 }}>\n                        <Form.Group>\n                            <Form.Control type=\"search\" placeholder=\"Search\"\n                                          value={globalFilter || \"\"}\n                                          onChange={e => setGlobalFilter(e.target.value)} />\n                        </Form.Group>\n                    </Col>)\n                    : (<></>)\n                }\n            </Row>\n\n            {/*Table*/}\n            <div className=\"table-responsive\">\n                <Table bordered striped {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>{column.isSorted ?\n                                        column.isSortedDesc ?\n                                            ' 🔽': ' 🔼'\n                                        : ''}</span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n\n            {/*Filters and Pagination*/}\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                                      value={pageSize}\n                                      onChange={(e) => {\n                                          setPageSize(Number(e.target.value));\n                                      }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n            {/*Table Info*/}\n            <Row>\n                <Col>\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nexport default Datatable;\n","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Services for Projects.\n */\n\nimport axios from \"axios\";\n\nexport class projectsServices{\n\n    /**\n     * Method to hit the API of getting list of projects\n     */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/projects\",object);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of getting single project\n     */\n    async get(id){\n        const result = await axios.get(\"/api/projects/\"+id);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of adding project in a list\n     */\n    async add(data){\n        //data.projectId = data.project;\n        const result = await axios.post(\"/api/projects/add\",data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of updating a project\n     */\n    async update(data){\n        //data.projectId = data.project;\n        const result = await axios.put(\"/api/projects/update/\"+data._id,data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of removing the project\n     */\n    async remove(data){\n        const result = await axios.delete(\"/api/projects/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new projectsServices()","/**\n * Author: Janvi Patel\n * Created On: 2021-07-20\n */\n\n import axios from \"axios\"\n\n export class ClientService {\n     async getAllClients(userId) {\n         const result = await axios.post(\"/api/clients/getAll\", {userId: userId} );\n         return result;\n     }\n \n     async editClient(client) {\n         const result = await axios.post(\"/api/clients/edit\", client );\n         return result;\n     }\n \n     async viewOneClient(client) {\n         const result = await axios.post(\"/api/clients/viewOne\" , client);\n         return result;\n     }\n \n     async addNewClient(saveData) {\n        const result = await axios.post('/api/clients/add', saveData);\n         return result;\n     }\n\n     async deleteClient(deleteData) {\n        const result = await axios.post(\"/api/clients/delete\", deleteData);\n        return result;\n     }\n }\n \n export default new ClientService()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Testimonials.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport projectServices from '../services/projectsServices.js';\nimport clientServices from '../services/clientService.js';\nimport registerServices from '../services/registerServices';\nimport {Table} from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = () => {\n\n    let history = useHistory();\n\n    const [userInfo, setUserInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n    });\n\n    useEffect(() => {\n        registerServices.fetchUserById(localStorage.getItem('user_id')).then((response) => {\n            if(response){\n                setUserInfo({\n                    name : response.Name,\n                    email : response.Email,\n                    mobile : response.ContactNo,\n                    linkedin : response.LinkedInProfile,\n                    website : response.Website,\n                    password : \"\"\n                })\n            }\n        }).catch((error) => {\n            alert(\"Login Failed!!\");\n            console.log(\"Error:\",error)\n        })\n    },[]);\n\n    const onClickBack = (e) => {\n        e.preventDefault();\n        history.push({ pathname: '/editProfile' });\n    };\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Profile\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col className=\"text-right\">\n                            <Button className=\"btn primary-button\" onClick={onClickBack}>\n                                Edit\n                            </Button>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"8\">\n                            <Table bordered hover>\n                                <tbody>\n                                <tr>\n                                    <td>Name:</td>\n                                    <td>{userInfo.name}</td>\n                                </tr>\n                                <tr>\n                                    <td>Contact No:</td>\n                                    <td>{userInfo.mobile}</td>\n                                </tr>\n                                <tr>\n                                    <td>Email:</td>\n                                    <td>{userInfo.email}</td>\n                                </tr>\n                                <tr>\n                                    <td>LinkedIn:</td>\n                                    <td>{userInfo.linkedin}</td>\n                                </tr>\n                                <tr>\n                                    <td>Website:</td>\n                                    <td>{userInfo.website}</td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Profile\n","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../services/registerServices';\n\nconst EditProfile = () => {\n    let history = useHistory();\n\n    const [userInfo, setUserInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        id: localStorage.getItem('user_id')           \n    });\n\n    useEffect(() => {\n        registerServices.fetchUserById(localStorage.getItem('user_id')).then((response) => {\n            if(response){\n                setUserInfo({                \n                    name : response.Name,\n                    email : response.Email,\n                    mobile : response.ContactNo,\n                    linkedin : response.LinkedInProfile,\n                    website : response.Website,\n                    password : \"\"\n                })\n            }\n        }).catch((error) => {\n            alert(\"Some error occurred\");\n            console.log(\"Eroor:\",error)\n        })\n    },[]);\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n    const checkMobile = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        id: localStorage.getItem('user_id')\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        mobileError:'',\n        linkedinError:'',\n        websiteError:'',\n        passwordError: '',\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            registrationInfo.name = userInfo.name\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            registrationInfo.email = userInfo.email\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.mobile === \"\"){\n            registrationInfo.mobile = userInfo.mobile\n        }\n        else{\n            if(!checkMobile.test(registrationInfo.mobile)){\n                newRegError.mobileError = \"Contact number Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.mobileError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.linkedin === \"\"){\n            registrationInfo.linkedin = userInfo.linkedin\n        }\n        else{\n            newRegError.linkedinError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.website === \"\"){\n            registrationInfo.website = userInfo.website\n        }\n        else{\n            newRegError.websiteError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n\n        if(registrationInfo.password === \"\"){\n            registrationInfo.password = userInfo.password\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(valid === true){\n            registerServices.editUser(registrationInfo).then((response) => {\n                if(response){\n                    alert(\"Profile Updated!!\");\n                    history.push(\"/profile\");\n                }\n            }).catch((error) => {\n                console.log(\"Error:\",error)\n            })\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Edit Profile</h3>\n                        <br />\n                        <br />\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.name}\n                                id = \"name\"\n                                name = \"name\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.email}\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Contact Number</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.mobile}\n                                id = \"mobile\"\n                                name = \"mobile\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.mobileError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\"> LinkedIn Profile</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.linkedin}\n                                id = \"linkedin\"\n                                name = \"linkedin\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.linkedinError}</p>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                        <Form.Label> Website</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder={userInfo.website}\n                                id = \"website\"\n                                name = \"website\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.websiteError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder={userInfo.password}\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n                        <br />\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Edit Profile </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditProfile\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Service Containing API calls for Invoice management, Invoice generation and Edit invoice.\n */\n import axios from \"axios\"\n export class invoiceServices {\n     async getTags(date) {\n         const result = await axios.post(\"/api/invoices/tags\",  date );\n         return result;\n     }\n \n     async addInvoice(data) {\n         const result = await axios.post(\"/api/invoices/save\", data);\n         return result;\n     }\n \n     async findInvoice(data) {\n         const result = await axios.post(\"/api/invoices/findinvoice\", data);\n         return result;\n     }\n \n     async getAllProject(data) {\n         const result = await axios.post(\"/api/invoices/getproject\",data);\n         return result;\n     }\n     \n     async getAllInvoices(data) {\n        const result = await axios.post(\"/api/invoices/fetchinvoices\",data);\n        return result;\n    }\n\n    async deleteinvoice(data) {\n        const result = await axios.post(\"/api/invoices/deleteinvoice\",data);\n        return result;\n    }\n     \n    async updateInvoice(data) {\n        const result = await axios.post(\"/api/invoices/updateinvoice\",data);\n        return result;\n    }\n    async getUserEmail(data) {\n        const result = await axios.post(\"/api/invoices/getEmail\",data);\n        return result;\n    }\n    async getClentEmail(data) {\n        const result = await axios.post(\"/api/invoices/getClientEmail\",data);\n        return result;\n    }\n    getClentEmail\n }\n \n export default new invoiceServices()","\n/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Generation component.\n */\nimport React, { PureComponent } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\nimport jsPDF from 'jspdf'\nimport Moment from 'moment';\nimport emailjs from 'emailjs-com';\n\nexport class InvoiceGeneration extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            projectId: props && props.history && props.history.location && props.history.location.state && props.history.location.state.state ? props.history.location.state.state : 0,\n            readonly: props && props.history && props.history.location && props.history.location.state && props.history.location.state.state ? true : false,\n            user: localStorage.getItem(\"user_id\"),\n            dueDateError: \"\",\n            startAt: \"\",\n            startAtError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\",\n            client: \"\",\n            totalcost: 0,\n            projects: [],\n            tags: [],\n            generateDate: \"\",\n            paymentStatus: \"Unpaid\",\n            dueDate: \"\",\n            clientName: \"\",\n            invoiceNumber: \"\",\n            Total: \"\",\n            generatedDate: \"\",\n            invoiceDetails: [],\n            generate: false,\n            save: false\n\n        }\n\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n    }\n    /**\n     * when page renders it will fetch all the invoices or invoice based on read condition\n     * \n     * If this component is called from invoiceManagement.js, this page will open as read-only mode. \n     * in read-only mode, it will fetch generated invoice details based on the project id.\n     * \n     * If this component is called from dahsboard, it will allow a user to generate invoice.\n     */\n\n    pageContent() {\n        //executed when called in read-only mode\n        if (this.state.readonly) {\n\n            invoiceServices.findInvoice(this.state).then((response) => {\n\n                if (response.status == 200) {\n                    this.setState({ project: response.data.result.projectName })\n                    this.setState({ clientName: response.data.result.clientName })\n                    this.setState({ dueDate: response.data.result.dueDate })\n                    this.setState({ generatedDate: response.data.result.generatedDate })\n                    this.setState({ hourlyRate: response.data.result.hourlyRate })\n                    this.setState({ Total: response.data.result.totalCost })\n                    this.setState({ invoiceNumber: response.data.result._id })\n                    this.setState({ paymentStatus: response.data.result.paymentStatus })\n                    this.setState({ startAt: response.data.result.startDate })\n                    this.setState({ endAt: response.data.result.taskendDate })\n                    let invoiceDetails = []\n                    response.data.result.tags.forEach(row => {\n\n                        let data = {}\n                        data.id = row.tagId;\n                        data.description = row.description\n                        data.hours = row.hours\n                        data.total = row.total\n                        invoiceDetails.push(data)\n                    })\n                    if (invoiceDetails.length != 0) {\n                        this.setState({ invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails) })\n\n                    }\n\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n        } else {\n            //Executed when called from dashbord page\n            invoiceServices.getAllProject(this.state).then((response) => {\n                if (response.status == 200) {\n\n                    this.setState({ projects: response.data.result })\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n    }\n    componentDidMount() {\n        this.pageContent()\n    }\n\n\n    //On value change of a control, set it in state.\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //validate project field\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    //validate due date and project duration date\n    validateDate = (event) => {\n        let isValid = true;\n\n        if (!this.validatestartDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        if (!this.validateDueDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDueDate = (event) => {\n        let isValid = true;\n        if (this.state.dueDate) {\n\n            const selectedDate = new Date(this.state.dueDate)\n            const endDate = new Date(this.state.endDate)\n            const today = new Date()\n            if (selectedDate < today) {\n                this.setState({ dueDateError: \"Due Date cannot be past date or Generated Date\" })\n                isValid = false;\n            } else if (endDate > selectedDate) {\n                this.setState({ dueDateError: \"Due Date must be greater than project duration date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ dueDateError: \"\" })\n            }\n        } else {\n            this.setState({ dueDateError: \"Due Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    validatestartDate = (event) => {\n        let isValid = true;\n        if (this.state.startAt) {\n\n            const selectedDate = new Date(this.state.startAt)\n            const endDate = new Date(this.state.endDate)\n            const today = new Date()\n            if (selectedDate > today) {\n                this.setState({ startAtError: \"Start Date cannot be furture datee\" })\n                isValid = false;\n            } else if (endDate < selectedDate) {\n                this.setState({ startAtError: \"Start Date must be less than End date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ startAtError: \"\" })\n            }\n        } else {\n            this.setState({ startAtError: \"Start Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const today = new Date()\n        const dueDate = new Date(this.state.dueDate)\n        const endDate = new Date(this.state.endDate)\n        if (dueDate && endDate) {\n            if (dueDate < endDate || today < endDate) {\n                this.setState({ endDateError: \"End Date cannot be greater than due date or current date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //validate horly rate field\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        } else if (this.state.hourlyRate < 1) {\n            this.setState({ hourlyRateError: \"Hourly Rate must be a greater than 0\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //Generate invoice by fetching all the task from the timelog collection\n    generateInvoice = (event) => {\n        event.preventDefault();\n        this.setState({ invoiceDetails: [] })\n        //invoice generation date\n        this.setState({ generateDate: Date.now() })\n        if (this.validateForm()) {\n            invoiceServices.getTags(this.state).then((response) => {\n                if (response.status == 200) {\n\n                    this.setState({ tags: response.data.result })\n                    let invoiceDetails = []\n                    let totalCost = 0\n                    response.data.result.forEach(row => {\n\n                        let data = {}\n                        var startdate = new Date(row.startAt);\n\n                        var enddate = new Date(row.endAt);\n\n                        var seconds = Math.round(((enddate) - (startdate)) / 1000).toFixed(3);\n\n                        var minutes = Math.round(seconds / 60).toFixed(3);\n                        var hour = Math.round(minutes / 60).toFixed(3);\n                        if (hour != \"NaN\" && hour) {\n                            data.id = row._id;\n                            data.description = row.task\n                            data.hours = hour\n                            data.total = this.state.hourlyRate * hour\n                            totalCost = totalCost + data.total\n                            invoiceDetails.push(data)\n                        }\n\n                    })\n                    //store tags, hours worked on that tags and total cost for performing that task\n                    if (invoiceDetails.length != 0) {\n                        this.setState({ invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails), generate: true })\n                        this.setState({ totalcost: totalCost })\n\n                    }\n                    if (this.state.invoiceDetails.length == 0) {\n                        alert(\"No task are pending to generate invoice. Please select again.\")\n                    }\n\n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n\n        }\n\n\n    }\n\n    //this function store generated invoices in database\n    saveInvoice = (event) => {\n        if (this.state.generate) {\n            if (this.validateForm()) {\n\n                invoiceServices.addInvoice(this.state).then((response) => {\n\n                    if (response.status == 200) {\n\n                        this.setState({ save: true })\n                        alert(\"Ïnvoice Added\")\n                    } else {\n                        alert(\"Invoice is already generated\")\n                    }\n                }).catch((error) => {\n                    alert(\"Invoice is already generated\")\n                })\n            }\n        } else {\n            alert(\"Invoice is not generated. Please generate Invoice first.\")\n        }\n    }\n\n    //this function store data in pdf file\n    downloadInvoice = (event) => {\n        if (this.state.save) {\n            var client = \"\"\n            var project = \"\"\n            var doc = new jsPDF('p', 'pt');\n            this.state.projects.forEach(result => {\n                if (result._id == this.state.project) {\n                    client = result.client\n                    project = result.title\n                }\n\n            })\n            const date = Moment(Date.now()).format('YYYY-MM-DD')\n            doc.text(250, 20, \"Invoice\")\n            doc.text(20, 50, \"Project Name :\" + project)\n            doc.text(20, 70, \"Client Name :\" + client)\n            doc.text(20, 90, \"From Date :\" + this.state.startAt)\n            doc.text(200, 90, \"To date :\" + this.state.endDate)\n            doc.text(20, 110, \"Invoice Genrated :\" + date)\n            doc.text(20, 130, \"Payment Due Date :\" + this.state.dueDate)\n            doc.text(20, 150, \"Hourly Rate :\" + this.state.hourlyRate + \"CAD\")\n            doc.text(20, 170, \"Total Amount :\" + this.state.totalcost + \"CAD\")\n            doc.text(20, 190, \"  \")\n            doc.text(20, 210, \"Task details\")\n            var i = 230\n            this.state.invoiceDetails.forEach(result => {\n\n                doc.text(20, i, \"Task :\" + result.description)\n                i = i + 20\n                doc.text(20, i, \"Hours :\" + result.hours)\n                i = i + 20\n                doc.text(20, i, \"Total :\" + result.total)\n                i = i + 20\n                doc.text(20, i, \"  \")\n                i = i + 20\n\n            })\n            doc.setFont('normal')\n            doc.save(\"generated.pdf\")\n\n        } else {\n            alert(\"Please save Invoice before downloading\")\n        }\n\n    }\n\n    Emailsender = (freelancerName, fromEmail, projectNAme, toEmail, clientName) => {\n\n        const date = Moment(Date.now()).format('YYYY-MM-DD')\n        const message = \"Hello \\nPlease find attached below invoice \\nProject Name  :\" + projectNAme + \"\\nFrom Date  :\" + this.state.startAt +\n            \"\\nTo Date  :\" + this.state.endDate + \"\\nDue Date  :\" + this.state.dueDate + \"\\nGenerated Date  :\" + date + \"\\nHourly Rate  :\" + this.state.hourlyRate + \"\\nTotal :\" + this.state.totalcost\n\n        var mailParams = {\n            //Mail Sender Details\n            freelancerName: freelancerName,\n            freelancerMail: fromEmail,\n\n            //Mail Reciver DetailstoEmail\n            clientName: clientName,\n            clientMail: toEmail,\n\n            //Attachment Messages\n            message: message\n        };\n\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log(error);\n            });\n\n    }\n    //this function sends invoice details to client through email using emailjs\n    sendemail = (e) => {\n        var fromEmail = \"\"\n        var freelancerName = \"\"\n        var clientName = \"\"\n        var toEmail = \"\"\n        var projectNAme = \"\"\n\n        this.state.projects.forEach(result => {\n            if (result._id == this.state.project) {\n                projectNAme = result.title\n            }\n\n        })\n\n        invoiceServices.getUserEmail(this.state).then((response) => {\n            var freelancerdata = response.data.result[0]\n            fromEmail = freelancerdata.Email\n            freelancerName = freelancerdata.Name\n            invoiceServices.getClentEmail(this.state).then(response => {\n                var clientdata = response.data.result[0]\n                toEmail = clientdata.Email\n                clientName = clientdata.ClientName\n                this.Emailsender(freelancerName, fromEmail, projectNAme, toEmail, clientName)\n\n            })\n\n        })\n\n    }\n\n    //called when component is called in read-only mode. This function redirect to invoicemanagement page\n    closeInvoice = (e) => {\n        this.props.history.push('/invoices')\n    }\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        : (<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                                {this.state.readonly ? (\n                                                    <span>\n                                                        <div> Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.project}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>From date:{Moment(this.state.startAt).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>To date:{Moment(this.state.endAt).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Invoice Genrated : {Moment(this.state.generatedDate).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Payment Due Date :{Moment(this.state.dueDate).format('YYYY-MM-DD HH:MM:SS')}</div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        <div>Payment Status :{this.state.paymentStatus} </div>\n                                                        <div> </div>\n                                                    </span>\n\n                                                ) : (\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                            onBlur={this.validateProject}\n                                                            isInvalid={this.state.projectError}>\n                                                            <option>Select Project</option>\n                                                            {this.state.projects.map(project => (\n                                                                <option value={project._id}>{project.title}</option>\n                                                            ))}\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>)}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n\n                                                {this.state.readonly ? (<div></div>) :\n                                                    (\n                                                        <Form.Group>\n\n                                                            <div className=\"inline-date-control\">\n\n                                                                <div className=\"due-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">Start Date</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" className=\"start-date\" name=\"startAt\" placeholder=\"start Date\" value={this.state.startAt} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.startAtError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.startAtError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                                <div className=\"end-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">End Date</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.endDateError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.endDateError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                                <div className=\"due-date-control\">\n                                                                    <div>\n                                                                        <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                    </div>\n                                                                    <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                        onBlur={this.validateDate}\n                                                                        isInvalid={this.state.dueDateError} />\n                                                                    <Form.Control.Feedback type=\"invalid\">\n                                                                        {this.state.dueDateError}\n                                                                    </Form.Control.Feedback>\n                                                                </div>\n                                                            </div>\n                                                        </Form.Group>)}\n                                            </Col>\n                                            <Col>\n                                                {this.state.readonly ? (<div></div>) : (\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                        <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                            onBlur={this.validateHourlyRate}\n                                                            isInvalid={this.state.hourlyRateError} />\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.hourlyRateError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                )}\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        {this.state.readonly ?\n                                            (<Row className=\"generate-button-container\">\n                                                <Col className=\"text-right\">\n                                                    <Button className=\"secondary-button\" onClick={this.closeInvoice}>\n\n                                                        Close\n                                                    </Button>\n                                                </Col>\n                                            </Row>) :\n                                            (\n                                                <div>\n                                                    {!this.state.save ? (\n                                                        <Row className=\"generate-button-container\">\n                                                            <Col className=\"text-right\">\n                                                                <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                                    Generate Invoice\n                                                                </Button>\n                                                                <Button className=\"secondary-button\" onClick={this.saveInvoice}>\n                                                                    Save\n                                                                </Button>\n                                                            </Col>\n                                                        </Row>\n\n                                                    ) : (\n                                                        <div>\n                                                            <Row className=\"generate-button-container\">\n                                                                <Col className=\"text-right\">\n                                                                    <Button className=\"secondary-button\" onClick={this.downloadInvoice}>\n                                                                        Download\n                                                                    </Button>\n                                                                    <Button className=\"secondary-button\" onClick={this.sendemail}>\n                                                                        Send\n                                                                    </Button>\n                                                                </Col>\n                                                            </Row>\n\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n\n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.state.invoiceDetails} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(InvoiceGeneration);","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class timelogServices{\n    // Get all Timelogs\n    async list(data){\n        const result = await axios.get(\"/api/timelogs\",{ params: data });\n        return result.data;\n    };\n\n    // Add new Timelog\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    // Update Timelog\n    async update(data){\n        data.projectId = data.project;\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    // Remove Timelog\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectsServices.js'\nimport clientService from \"../services/clientService\";\n\nexport default function Timelogs() {\n    //Init\n    const columns = [\n        { Header: 'Project', accessor: 'project.title' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        timelogServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    useEffect(() => {\n        if(data.length){\n            let lastTask = data[0];\n            if(lastTask && !lastTask.endAt){\n                setTask(lastTask);\n                restartTimer(new Date(lastTask.startAt));\n            }\n        }\n    },[data]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const restartTimer = (startAt) => {\n        if (timerState === 0) {\n            setTimerStart(startAt - timer);\n            setTimer(Date.now() - startAt);\n            setTimerState(\n                setInterval(() => {\n                    setTimer( Date.now() - startAt)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    const [clients, setClients] = useState([]);\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClients(res.data));\n    },[]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            task.userId = localStorage.getItem(\"user_id\");\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                    <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                    <>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                        <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\n                                    </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    {clients.length && clients.map(function(client,index){\n                                                        return <option key={index} value={client.ClientName}>{client.ClientName}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.length && projects.filter(project => project.client && project.client.includes(task.client))\n                                                        .map(function(project,index){\n                                                            return <option key={index} value={project._id}>{project.title}</option>\n                                                        })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Add Project File.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientService from '../../services/clientService';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for adding the project\n */\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            rate: \"\",\n            invoice: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        // if(!project.rate.value > 0){\n        //     newProjectError.rate = \"Rate is required\";\n        //     setProjectError(newProjectError);\n        //     valid = false;\n        // }\n        // else{\n        //     newProjectError.rate = \"\";\n        //     setProjectError(newProjectError);\n        // }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.add(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\">Daily</option>\n                                            <option value=\"Weekly\">Weekly</option>\n                                            <option value=\"Monthly\">Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\">In Progress</option>\n                                            <option value=\"Pending\">Pending</option>\n                                            <option value=\"Completed\">Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </center></form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Listing File for Projects.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './Projects/AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices.js'\nimport \"../styles/Projects.scss\";\n\n/**\n *  Functionality for listing down the list of projects\n */\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a className=\"secondary-button\" align=\"right\" onClick={() => viewDetails(row.original._id)} >View</a><a title=\"Edit Project\" onClick={() => editProject(row.original._id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteProject(row.original) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        projectsServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    const deleteProject = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            projectsServices.remove(project).then(res => alert(res.message));\n            projectsServices.list().then(res => setData(res.data));\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    async function viewDetails(id) {\n        let url = \"/projects/view/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n                <Row className=\"button-container\">\n                    <Col className=\"text-right\">\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"btn primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Edit File for Projects.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientService from '../../services/clientService';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for editing the project\n */\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const params = history.location.pathname.split('/');\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n        projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.update(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Edit Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" value={project.title.length > 0 && project.title} name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName} selected={client.ClientName === project.client ? \"true\":\"false\"}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} value={project.description} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} value={project.rate} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\" selected={project.invoice === \"Daily\" ? \"true\":\"false\"}>Daily</option>\n                                            <option value=\"Weekly\" selected={project.invoice === \"Weekly\" ? \"true\":\"false\"}>Weekly</option>\n                                            <option value=\"Monthly\" selected={project.invoice === \"Monthly\" ? \"true\":\"false\"}>Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\" selected={project.status === \"In Progress\" ? \"true\":\"false\"}>In Progress</option>\n                                            <option value=\"Pending\" selected={project.status === \"Pending\" ? \"true\":\"false\"}>Pending</option>\n                                            <option value=\"Completed\" selected={project.status === \"Completed\" ? \"true\":\"false\"}>Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * View File for Project.\n */\n\n import {useState, useEffect, React} from 'react';\n import PageHeader from \"../../components/PageHeader\";\n import { useHistory } from 'react-router-dom';\n import projectsServices from '../../services/projectsServices';\n import {Col, Row, Button, Table} from \"react-bootstrap\";\n \n /**\n  *  Functionality for editing the project\n  */\n const ViewProject = (prop) => {\n \n     const history = useHistory();\n \n     async function cancel() {\n         let url = \"/projects\";\n         history.push(url);\n     }\n \n     const params = history.location.pathname.split('/');\n \n     const [project, setProject] = useState({\n         title: \"\",\n         client: \"\",\n         description: \"\",\n         invoice: \"\",\n         rate: \"\",\n         status: \"\"\n     });\n\n     useEffect(() => {\n         projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n     },[]);\n \n     return (\n         <div className=\"page-container\">\n             <div className=\"page-header-container\">\n                 <PageHeader title=\"View Project\" />\n             </div>\n             <div className=\"page-content-container\">\n                 <div className=\"page-content\">\n                 <Row>\n                    <Col className=\"text-right\">\n                        <Button className=\"btn primary-button\" onClick={cancel}>\n                            <i className=\"fas fa-times\"></i> Close\n                        </Button>\n                    </Col>\n                </Row>\n                <br/>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"8\">\n                            <Table bordered hover>\n                                <tbody>\n                                <tr>\n                                    <td>Project Title:</td>\n                                    <td>{project.title}</td>\n                                </tr>\n                                <tr>\n                                    <td>Client Name:</td>\n                                    <td>{project.client}</td>\n                                </tr>\n                                <tr>\n                                    <td>Description:</td>\n                                    <td>{project.description}</td>\n                                </tr>\n                                <tr>\n                                    <td>Hourly Rates:</td>\n                                    <td>{project.rate}</td>\n                                </tr>\n                                <tr>\n                                    <td>Invoice Duration:</td>\n                                    <td>{project.invoice}</td>\n                                </tr>\n                                <tr>\n                                    <td>Project Status:</td>\n                                    <td>{project.status}</td>\n                                </tr>\n                                </tbody>\n                            </Table>\n                        </Col>\n                    </Row>\n                 </div>\n             </div>\n         </div>\n     );\n }\n \n export default ViewProject;","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Add Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { curl_init } from 'react';\nimport { curl_getinfo } from 'react';\nimport { CURLINFO_HTTP_CODE } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\"\n\nexport class AddClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            linkedInProfile: \"\",\n            linkedInProfileError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\",\n            userId: props.location.userId\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectCountry(val) {\n        this.setState({ country: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectRegion(val) {\n        this.setState({ region: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event\n     */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event\n     */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event\n     */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event\n     */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern\n     * @param {*} event\n     */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern\n     * @param {*} event\n     */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern\n     * @param {*} event\n     */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern\n     * @param {*} event\n     */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern\n     * @param {*} event\n     */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form\n     * @param {*} event\n     */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On submit new client will be added and the api call will be made\n     * @param {*} event\n     */\n    onSubmit = (event) => {\n        event.preventDefault();\n        clientService.addNewClient(this.state).then((response) => {\n            if (this.validateForm()) {\n                alert(\"Details Successfully Saved!!\");\n            }\n            this.props.history.push({ pathname: '/clients' });\n        }).catch((error) => {\n            alert(\"Duplicate details found!!\");\n            console.log(error)\n        })\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.ClientName} onChange={this.onValueChange}\n                                                              onBlur={this.validateClientName}\n                                                              isInvalid={this.state.clientNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.OrganizationName} onChange={this.onValueChange}\n                                                              onBlur={this.validateOrganization}\n                                                              isInvalid={this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.ContactNo} onChange={this.onValueChange}\n                                                              onBlur={this.validateContactNo}\n                                                              isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.WebsiteName} onChange={this.onValueChange}\n                                                              onBlur={this.validateWebsiteName}\n                                                              isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.EmailId} onChange={this.onValueChange}\n                                                              onBlur={this.validateEmailId}\n                                                              isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter Linkedin Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                              onBlur={this.validateLinkedInProfile}\n                                                              isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.Street} onChange={this.onValueChange}\n                                                              onBlur={this.validateStreet}\n                                                              isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.BusinessDescription} onChange={this.onValueChange}\n                                                              onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.PostalCode} onChange={this.onValueChange}\n                                                              onBlur={this.validatePostalcode}\n                                                              isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.MeetingPlatform} onChange={this.onValueChange}\n                                                              onBlur={this.validateMeetingPlatform}\n                                                              isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In Person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"country\">\n                                                            <Form.Label className=\"required\">Country </Form.Label>\n                                                            <CountryDropdown className=\"form-control\" as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                                             onChange={(value) => this.selectCountry(value)}\n                                                            />\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"region\">\n                                                            <Form.Label>Region </Form.Label>\n                                                            <RegionDropdown className=\"form-control\"\n                                                                            country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                                            as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                            </RegionDropdown>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col></Col>\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"btn primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                        <Button className=\"secondary-button\" onClick={this.onClickBack}>\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Clients details.\n */\n\nimport React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './Clients/AddClient'\nimport { Component } from \"react\";\nimport clientService from \"../services/clientService\"\n\n\nexport class Clients extends Component {\n  \n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      ClientName: \"\",\n      Organization: \"\",\n      ContactNo: \"\",\n      Emailid: \"\"\n    }\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      { Header: 'Website', accessor: 'Website' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          \n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\" onClick={() => this.viewDetails(row)} >View</Button>\n            <Button className=\"secondary-button\" align=\"right\"  onClick={() => this.editDetails(row)} >Edit</Button>\n            <Button className=\"delete-button\" align=\"right\"  onClick={() => this.deleteDetails(row)} >Delete</Button>\n          </div>\n        )\n      }]; \n\n      this.userId = localStorage.getItem(\"user_id\")\n  }\n\n  /**\n     * On mount, set the values of table.\n     * @param {*} event \n  */\n  componentDidMount() {\n    \n    clientService.getAllClients(this.userId).then((response) => {\n        if (response.status == 200) {\n            this.setData(response.data);\n            let newDetails = [];\n            response.data.forEach(element => {\n              let row = {}\n              row.ClientName = element.ClientName;\n              row.ContactNo = element.ContactNo;\n              row.Emailid = element.Email;\n              row.Website = element.Website;\n              newDetails.push(row)\n            });\n            this.setState({\n              data: newDetails\n            })\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n\n  }\n\n  /**\n     * On click of view details select view client API call\n     * @param {*} event \n  */\n  viewDetails = (row) => {\n\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/ViewClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  }\n\n   /**\n     * On click of edit details edit client API call\n     * @param {*} event \n  */\n  editDetails = (row) => {\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/EditClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  };\n\n  /**\n     * On click of delete details delete client API call and set table\n     * @param {*} event \n  */\n  deleteDetails = (row) => {\n    clientService.deleteClient(row.original).then((response) => {\n          alert(\"Successfully deleted entry!!\");\n          clientService.getAllClients(this.userId).then((response) => {\n              if (response.status == 200) {\n                  this.setData(response.data);\n                  let newdetails = [];\n                  response.data.forEach(element => {\n                    let row = {}\n                    row.ClientName = element.ClientName;\n                    row.ContactNo = element.ContactNo;\n                    row.Emailid = element.Email;\n                    row.Website = element.Website;\n                    newdetails.push(row)\n                  });\n                  this.setState({data: newdetails})\n                }\n          }).catch((error) => {\n              console.log(error)\n          })\n      }).catch((error) => {\n          console.log(error)\n      })\n  }\n\n  setData = (response) => {\n    this.data = []\n  }\n\n  /**\n     * On click of handle new client add new client detail redirected\n     * @param {*} event \n  */\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/clients/add', \n                              userId: this.userId});\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.state.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);\n","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Edit Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\";\n\nexport class EditClient extends Component\n{\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            clientNameError: \"\",\n            organizationName: props.history.location.state.state.Organization,\n            organizationNameError: \"\",\n            contactNo: props.history.location.state.state.ContactNo,\n            contactNoError: \"\",\n            websiteName: props.history.location.state.state.Website,\n            websiteNameError: \"\",\n            emailId: props.history.location.state.state.Email,\n            emailIdError: \"\",\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            linkedInProfileError: \"\",\n            street: props.history.location.state.state.Street,\n            streetError: \"\",\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            PostalCodeError: \"\",\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            meetingPlatformError: \"\",\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectCountry (name, val) {\n        this.setState({  name: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event\n     */\n    selectRegion (val) {\n        this.setState({ name: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event\n     */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event\n     */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event\n     */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event\n     */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern\n     * @param {*} event\n     */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern\n     * @param {*} event\n     */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern\n     * @param {*} event\n     */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern\n     * @param {*} event\n     */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern\n     * @param {*} event\n     */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form\n     * @param {*} event\n     */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On Update client will be updated and the api call will be made\n     * @param {*} event\n     */\n    onUpdate = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            clientService.editClient(this.state).then((response) => {\n            }).catch((error) => {\n                console.log(error)\n            })\n            alert('Successfully updated details!!');\n            this.props.history.push({ pathname: '/clients' });\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Edit Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                              onBlur={this.validateClientName}\n                                                              isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                              onBlur={this.validateOrganization}\n                                                              isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                              onBlur={this.validateContactNo}\n                                                              isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                              onBlur={this.validateWebsiteName}\n                                                              isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                              onBlur={this.validateEmailId}\n                                                              isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter LinkedIn Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                              onBlur={this.validateLinkedInProfile}\n                                                              isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                              onBlur={this.validateStreet}\n                                                              isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                              onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                              onBlur={this.validatePostalcode}\n                                                              isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                              onBlur={this.validateMeetingPlatform}\n                                                              isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Row>\n                                                    <Col>\n                                                        <div className=\"country\">\n                                                            <Form.Label className=\"required\">Country </Form.Label>\n                                                            <CountryDropdown className=\"form-control\" as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                                             onChange={(value) => this.selectCountry(value)}\n                                                            />\n                                                        </div>\n                                                    </Col>\n                                                    <Col>\n                                                        <div className=\"region\">\n                                                            <Form.Label>Region </Form.Label>\n                                                            <RegionDropdown className=\"form-control\"\n                                                                country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                                as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                            </RegionDropdown>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col/>\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                              Back\n                                        </Button>\n                                        <Button className=\"secondary-button\" onClick={this.onUpdate}>\n                                            Update\n                                        </Button>\n                                        \n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * view Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport {Table} from \"react-bootstrap\";\n\nexport class ViewClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ClientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            organizationName: props.history.location.state.state.Organization,\n            contactNo: props.history.location.state.state.ContactNo,\n            websiteName: props.history.location.state.state.Website,\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            emailId: props.history.location.state.state.Email,\n            street: props.history.location.state.state.Street,\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"View Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                            <Col className=\"text-right\">\n                                <Button className=\"btn primary-button\" onClick={this.onClickBack}>\n                                    <i className=\"fas fa-times\"></i> Close\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br/>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"8\">\n                                <Table bordered hover>\n                                    <tbody>\n                                    <tr>\n                                        <td>Client Name:</td>\n                                        <td>{this.state.clientName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact No:</td>\n                                        <td>{this.state.contactNo}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Email:</td>\n                                        <td>{this.state.emailId}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Street:</td>\n                                        <td>{this.state.street}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Postal Code:</td>\n                                        <td>{this.state.postalCode}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Region:</td>\n                                        <td>{this.state.region}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Country:</td>\n                                        <td>{this.state.country}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Organization:</td>\n                                        <td>{this.state.organizationName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Website:</td>\n                                        <td>{this.state.websiteName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>LinkedIn Profile:</td>\n                                        <td>{this.state.linkedInProfile}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Description:</td>\n                                        <td>{this.state.businessDescription}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Meeting Platform:</td>\n                                        <td>{this.state.meetingPlatform}</td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ViewClient);","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Services Page for Testimonials.\n */\n\nimport axios from \"axios\";\n\nexport class testimonialServices{\n\n    // list of all testimonials\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/testimonials\",object);\n        return result.data;\n    };\n\n    // add data\n    async add(data){\n        const result = await axios.post(\"/api/testimonials/add\",data);\n        return result.data;\n    };\n\n    // update data by id\n    async update(data){\n        const result = await axios.put(\"/api/testimonials/update/\"+data.id,data);\n        return result.data;\n    };\n\n    // remove data by id\n    async delete(deleteData) {\n        const result = await axios.post(\"/api/testimonials/remove\", deleteData);\n        return result.data;\n     }\n}\n\nexport default new testimonialServices()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Testimonials.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport projectServices from '../services/projectsServices.js';\nimport clientServices from '../services/clientService.js';\nimport testimonialServices from '../services/testimonialServices.js';\n// var dateFormat = require(\"dateformat\");\n\nconst Testimonials = () => {\n\n    /**\n     * creting a column for a datatable to display testimonials\n     */\n    const columns = [\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Client', accessor: 'client' },\n        { Header: 'Feedback', accessor: 'feedback' },\n        // { Header: 'Requested on', accessor: row => dateFormat(row.requestedOn, \"dd-mm-yyyy, HH:MM:ss\") },\n\n        {\n            // creating an action button containig entire row details\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"action\">\n                    <Button className=\"delete-button\"  onClick= {() => deleteTestimonial(row)} >Delete</Button>\n                </div>\n            )\n        }\n    ];\n\n    /**\n     * fetching list of project details through an api call\n     * using project services's list functionality\n     */\n    const [project, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]);\n\n    /**\n     * fetching list of clients details through api call\n     * using clientServices's list functionality\n     */\n    const [client, setClient] = useState([]);\n    useEffect(() => {\n        clientServices.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n    },[]);\n\n    /**\n     * fetching list of Testimonials details through api call\n     * using testimonialService's list functionality\n     */    const [testimonial, setTestimonial] = useState([]);\n    useEffect(() => {\n        testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n    },[]);\n\n    /**\n     * Constant containing mailing information to send to\n     */\n    const [mailInfo, setMailInfo] = useState({\n        project: \"\",\n        client: \"\",\n        message: \"\",\n        id: \"\",\n        userId: localStorage.getItem('user_id')\n    });\n\n    /**\n     * Storing the values into the database using testimonialService's add functionality\n     * @param {*} e\n     * the response containig automated genrated id is fetched and stored into mailInfo's id parameter\n     */\n    const storeData = (e) => {\n        e.preventDefault();\n        setLgShow(false);\n        testimonialServices.add(mailInfo).then(response => {\n            mailInfo.id = response.result._id\n        })\n\n        sendEmail();\n    }\n\n    /**\n     * Method to send email on click event.\n     * @param {*} data\n     * The emails can be sent on specif id's using this functionalities.\n     */\n    function sendEmail() {\n\n        const Form_Link = \"http://localhost:3001/testimonials/requestTestimonials/\" + mailInfo.id;\n\n        // Mailing details\n        var mailParams = {\n\n            //Mail Sender Details\n            freelancerName: 'Freelancer',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            //Attachment Messages\n            message: mailInfo.message,\n            link: Form_Link\n        };\n\n        // calling emailJS functionality with emailJS Credentials\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log(error);\n            });\n    }\n\n    /**\n     * Functionality to delete testimonials with a specific id of testimonial\n     * @param {*} row\n     */\n    const deleteTestimonial = (row) => {\n        if (window.confirm(\"Are you sure?\")) {\n            testimonialServices.delete(row.original).then(res => alert(res.message));\n            testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n        }\n    };\n\n    /**\n     * onChange of the values store the values into mailInfo Parameters\n     * @param {*} e\n     * parameter e containig the values is used to fetch form element on change\n     */\n    const handleChange = (e) => {\n        let newRequest = {...mailInfo, [e.target.name]: e.target.value};\n        setMailInfo(newRequest);\n    };\n\n    // Model display constant to display model when true\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Client</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"client\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        >\n                                                            <option>Select Client</option>\n                                                            {client.length && client.map(function(cli,index){\n                                                                return <option key={index} value={cli.ClientName}>{cli.ClientName}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        >\n                                                            <option>Select Project</option>\n                                                            {project.length && project.filter(proj => proj.client && proj.client.includes(mailInfo.client))\n                                                                .map(function(proj,index){\n                                                                    return <option key={index} value={proj.title}>{proj.title}</option>\n                                                                })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Description Message</Form.Label>\n                                                        <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\"\n                                                                      onChange={(e) => handleChange(e)}\n                                                        />\n                                                    </Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={storeData} >\n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={testimonial} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Request Testimonials.\n */\n\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport testimonialServices from '../services/testimonialServices.js';\nimport { useParams } from 'react-router-dom';\n\n/**\n * Request testimonial page containing the id of specific testimonial send to client via mail\n * @param {*} prop \n * @returns \n */\nconst RequestTestimonial = (prop) => {\n\n    const param = useParams();\n\n    // feedback Details\n    const [feedback, setFeedback] = useState({\n        \n        feedback: \"\",\n        id : param.id\n    });\n\n    /**\n     * On change stores new feedback details into the feedback variable\n     * @param {*} e \n     * Form elements are stored into the feedback on change\n     */\n    const handleChange = (e) => {\n        let newFeedback = {...feedback, [e.target.name]: e.target.value};\n        setFeedback(newFeedback);\n    };\n\n    /**\n     * Storing the values into the database using testimonialService's update functionality\n     * @param {*} e \n     * The data on specific id is updated using this functionality\n     */    \n    const storeData = (e) => {\n        e.preventDefault();\n        testimonialServices.update(feedback)\n    }\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonial Request\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div>\n            <Row>    \n                <Col md = {5}></Col>\n                <Col md = {10}></Col>\n            </Row>\n            </div>\n            <Row>\n                    <Col md = {5}></Col>\n                    <Col md = {10}>\n                    <Form className=\"feedback-form\">\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group>\n                                        <Form.Label className=\"required form-label\">Feedback: </Form.Label>\n                                        <Form.Control as=\"textarea\" name=\"feedback\" rows={5} id=\"feedback\" placeholder=\"Please provide Feedback...\" \n                                            onChange={(e) => handleChange(e)} \n                                        />\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                <Button variant=\"primary\" type=\"submit\" id=\"feedbackSubmit\" onClick={storeData}>   \n                                    Submit\n                                </Button>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n\n                    </Form>\n                    </Col>\n                    <Col md = {1}></Col>\n                </Row>\n\n            </div>\n        </div>    \n    )\n}\n\nexport default RequestTestimonial\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Management component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceManagement.scss\";\nimport invoiceServices from \"../services/invoiceServices\";\nimport \"../styles/Invoices.scss\";\nimport Moment from 'moment';\n\nexport class Invoices extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: localStorage.getItem(\"user_id\"),\n            checkbox: 'true',\n            delete: 'false',\n            columns: [\n                { Header: 'Invoice Number', accessor: 'invoicenumber' },\n                { Header: 'Generated Date', accessor: 'generateddate' },\n                { Header: 'From Date', accessor: 'fromdate' },\n                { Header: 'To Date', accessor: 'todate' },\n                { Header: 'Due Date', accessor: 'duedate' },\n                { Header: 'Client Name', accessor: 'clientname' },\n                { Header: 'Project Name', accessor: 'projectname' },\n                { Header: 'Payment Status', accessor: 'paymentstatus' },\n                {\n                    Header: 'Action', accessor: 'button1',\n                    Cell: ({ row }) => (\n                        <div>\n                            <Button className=\"secondary-button\" onClick={() => this.editInvoice(row)}>Edit</Button>\n                            <Button className=\"secondary-button\" onClick={() => this.viewInvoice(row)}>View</Button>\n                            <Button className=\"delete-button\" onClick={() => this.deleteInvoice(row)}>Delete</Button>\n                        </div>)\n                },\n            ],\n            data: []\n        }\n    }\n\n    //fetch list of all the generated invoices\n    getAllInvoices() {\n\n        invoiceServices.getAllInvoices(this.state).then((response) => {\n            if (response.status == 200) {\n                let invoiceDetails = [];\n                response.data.result.forEach(element => {\n\n                    let row = {}\n                    row.invoicenumber = element._id;\n                    row.generateddate = Moment(element.generatedDate).format('YYYY-MM-DD');\n                    row.fromdate = Moment(element.startDate).format('YYYY-MM-DD');\n                    row.todate = Moment(element.taskendDate).format('YYYY-MM-DD');\n                    row.duedate = Moment(element.dueDate).format('YYYY-MM-DD');\n                    row.clientname = element.clientName;\n                    row.projectname = element.projectName;\n                    row.paymentstatus = element.paymentStatus;\n                    row.startDate = Moment(element.startDate).format('YYYY-MM-DD');\n\n                    invoiceDetails.push(row)\n\n                });\n                if (invoiceDetails.length != 0)\n                    this.setState({\n                        data: invoiceDetails\n                    })\n\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    componentDidMount() {\n        this.getAllInvoices()\n    }\n\n    //Edit invoice\n    editInvoice = (row) => {\n        this.props.history.push({ pathname: '/editinvoice' }, {\n            state: row.original.invoicenumber\n        })\n    }\n    //open InvoiceGeneration.js in read-only mode to view generated invoice details.\n    viewInvoice = (row) => {\n\n        this.props.history.push({ pathname: '/invoices/generate' }, {\n            state: row.original.invoicenumber\n        })\n    }\n\n    //delete invoice\n    deleteInvoice = (row) => {\n        invoiceServices.deleteinvoice(row.original).then((response) => {\n            if (response) {\n                this.setState({ delete: 'true' })\n                alert(\"Invoice Deleted\")\n                this.getAllInvoices()\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        return (\n\n            <div className=\"page-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                        <Col className=\"text-right mb-3\">\n                            <a href=\"/invoices/generate\" title=\"Add Project\" className=\"btn primary-button\">\n                                Generate Invoice\n                            </a>\n                        </Col>\n                        </Row>\n                        <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Invoices)","/**\n * Author: Bansi Mehta\n * Created On: 20201-07-20\n * Service containing api calls for TO-DO List.\n */\nimport axios from \"axios\"\nexport class todoListService {\n    async getAllTasks(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/todoLists/getList\", object);\n        return result;\n    }\n\n    async markTaskAsDone(id) {\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\n        return result;\n    }\n\n    async deleteTask(id) {\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\n        return result;\n    }\n\n    async saveTask(saveData) {\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\n        return result;\n    }\n}\n\nexport default new todoListService()","/**\n * Author: Bansi Mehta.\n * Created On: 2021-06-07\n * Todo list component.\n */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Col, Row, Button } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap';\nimport moment from \"moment\";\nimport axios from 'axios'\nimport \"../styles/TodoList.scss\";\nimport PageHeader from \"../components/PageHeader\";\nimport todoListService from \"../services/todoListService\";\nexport class TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const currentDate = moment().format('YYYY-MM-DD')\n        this.state = {\n            completeTasks: [],\n            incompleteTasks: [],\n            date: currentDate,\n            newTask: ''\n        }\n\n        this.item = {\n            title: '',\n            status: false,\n            date: currentDate\n        }\n        this.userId = localStorage.getItem(\"user_id\")\n    }\n\n    componentDidMount() {\n        this.getAllData(this.state.date)\n    }\n\n    /**\n     * On value change of a control, set it in state.\n     * @param {*} event \n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * Get all the tasks based on date.\n     * Date format: \"YYYY-MM-DD\".\n     * Divide the tasks received into groups: complete and incomplete to display.\n     * @param {*} date \n     */\n    getAllData(date) {\n        todoListService.getAllTasks({\"currentDate\": date, \"userId\": this.userId}).then(response => {\n            if (response.status === 200) {\n                if (response.data && response.data.result && response.data.result.length) {\n                    let completeTask = []\n                    let incompleteTask = []\n                    response.data.result.forEach(row => {\n                        if (row && row.status == true) {\n                            completeTask.push(row)\n                        } else {\n                            incompleteTask.push(row)\n                        }\n                    })\n                    this.setState({ completeTasks: completeTask })\n                    this.setState({ incompleteTasks: incompleteTask })\n                } else {\n                    this.setState({ completeTasks: [] })\n                    this.setState({ incompleteTasks: [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * Mark the task item as complete based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemComplete(rowData) {\n        todoListService.markTaskAsDone(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n                alert(\"Task completed successfully\");\n            }\n        })\n    }\n\n    /**\n     * Delete the task based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemDelete(rowData) {\n        todoListService.deleteTask(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date);\n                alert(\"Task deleted successfully\");\n            }\n        })\n    }\n\n    /**\n     * Add new task.\n     * Refresh the list if successful.\n     * @param {*} event \n     */\n    saveItem = (event) => {\n        event.preventDefault()\n        if (this.state.newTask) {\n            let saveData = {\n                title: this.state.newTask,\n                date: this.state.date,\n                userId: this.userId\n            }\n            todoListService.saveTask(saveData).then(response => {\n                if (response.status == 200) {\n                    this.setState({ newTask: '' })\n                    this.getAllData(this.state.date)\n                    alert(\"Task added successfully\");\n                }\n            })\n        } else {\n            alert(\"Cannot enter empty task\")\n        }\n        \n    }\n\n    /**\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getPreviousDate = (event) => {\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: previousDate })\n        this.getAllData(previousDate)\n    }\n\n    /**\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getNextDate = (event) => {\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: nextDate })\n        this.getAllData(nextDate)\n    }\n\n    render() {\n        return (\n            <div className=\"page-container to-do-list-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Container className=\"to-do-list-content\">\n                            <Row className=\"date-row\">\n                                <Col className=\"date-control\">\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\n                                        <i className=\"fas fa-chevron-left\"></i>\n                                    </span>\n                                    <span>\n                                        {this.state.date}\n                                    </span>\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\n                                        <i className=\"fas fa-chevron-right\"></i>\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"add-row\">\n                                <div className=\"add-text\">\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\n                                </div>\n                                <div className=\"add-button\">\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\n                                </div>\n                            </Row>\n                            <Row className=\"to-do-list-items\">\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.incompleteTasks.map(row => (\n                                            <Card className=\"card-content-incomplete\">\n                                                <Row className=\"card-item\">\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\n                                                    </Col>\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\n                                                        <Card.Body>\n                                                            <Card.Title>{row.title}</Card.Title>\n                                                        </Card.Body>\n                                                    </Col>\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.completeTasks.map(row => (\n                                            <Card className=\"card-content-complete\">\n                                                <Card.Body>\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\n                                                </Card.Body>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(TodoList);","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-26\n * Services for Calendar Event.\n */\n\n import axios from \"axios\";\n\n export class calendarServices{\n \n    /**\n    * Method to hit the API of getting list of calendar events\n    */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/calendar\",object);\n        return result.data;\n    };\n\n    /**\n    * Method to hit the API of adding calendar event in a list\n    */\n     async add(data){\n        const result = await axios.post(\"/api/calendar/add\",data);\n        return result.data;\n     };\n }\n \n export default new calendarServices()","import React, { useEffect, useState } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport calendarServices from \"../services/calendarServices\";\nimport moment from 'moment';\nimport \"../styles/Calendar.scss\";\n\nexport default function Calendar(){\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        calendarServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => {\n            let newEvents = [...events]\n            for (let i = 0; i < res.data.length; i++) {\n                const dateTime = moment(`${res.data[i].date} ${res.data[i].time}`, 'YYYY-MM-DD HH:mm:ss').format();\n                var data = {title : res.data[i].eventName , date : dateTime};\n                newEvents.push(data);\n            }\n            setEvents(newEvents);\n        });\n    },[]);\n\n    const [calendarEvent, setCalendarEvent] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [calendarEventError, setCalendarEventError] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\"\n    });\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newCalendarEvent = {...calendarEvent, [e.target.name]: e.target.value };\n        setCalendarEvent(newCalendarEvent);\n    };\n    \n    const [showModal, setShowModal] = useState(false);\n\n    const isEventValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setCalendarEventError({\n            eventName: \"\",\n            category: \"\",\n            date: \"\",\n            time: \"\"\n        });\n        let newCalendarEventError = {...calendarEventError};\n\n        if (!calendarEvent.eventName.length > 0) {\n            newCalendarEventError.eventName = \"Event Name is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.eventName = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.category.length > 0) {\n            newCalendarEventError.category = \"Category is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.category = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.time.length > 0) {\n            newCalendarEventError.time = \"Event Time is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.time = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if(valid === true){\n            calendarServices.add(calendarEvent).then(res => res);\n            let newEvents = [...events]\n            const dateTime = moment(`${calendarEvent.date} ${calendarEvent.time}`, 'YYYY-MM-DD HH:mm:ss').format();\n            var data = {title : calendarEvent.eventName , date : dateTime};\n            newEvents.push(data);\n            setEvents(newEvents);\n            handleModalClose();\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = (arg) => {\n        calendarEvent.date = arg.dateStr;\n        setShowModal(true);\n    }\n\n    return (\n        <div className=\"page-container calendar-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Calendar\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Container className=\"to-do-list-content\"></Container>\n                    <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={events}\n                        dateClick={handleModalShow}\n                    />\n                    <Modal show={showModal} onHide={handleModalClose}>\n                            <Form onSubmit={(e) => isEventValid(e)}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>New Calendar Event</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body className=\"show-grid\">\n                                    <Container>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Name</Form.Label>\n                                                <Form.Control type=\"text\" name=\"eventName\" placeholder=\"Event Name...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.eventName.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.eventName}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Category</Form.Label>\n                                                <Form.Control type=\"text\" name=\"category\" placeholder=\"Event Category...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.category.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.category}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Time</Form.Label>\n                                                <Form.Control type=\"time\" name=\"time\" placeholder=\"Event Time...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.time.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.time}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                        Close\n                                    </Button>\n                                    <Button className=\"primary-button\" type=\"submit\">\n                                        Add\n                                    </Button>\n                                </Modal.Footer>\n                            </Form>\n\n                        </Modal>\n                    </div>\n                </div>\n        </div>\n    )\n}","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Edit component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/EditInvoice.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\n\nexport class EditInvoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            invoiceNumber:\"\",\n            taskendDate:\"\",\n            taskstartDate:\"\",\n            projects:\"\",\n            clientName:\"\",\n            generatedDate:\"\",\n            dueDate:\"\",\n            hourlyRate:\"\",\n            Total:\"\",\n            paymentstatus:\"\",\n            paymentPreStatus:\"\"\n            \n            \n        }}\n        //Fetch invoice based on invoice is to update it.\n        componentDidMount() {\n          \n            invoiceServices.findInvoice(this.state).then((response) =>{\n              \n                if (response.status == 200){\n                    this.setState({project: response.data.result.projectName})\n                    this.setState({clientName:response.data.result.clientName})\n                    this.setState({generatedDate: response.data.result.generatedDate})\n                    this.setState({Total:response.data.result.totalCost})\n                    this.setState({invoiceNumber:response.data.result._id})\n                    this.setState({hourlyRate:response.data.result.hourlyRate})\n                    this.setState({paymentPreStatus:response.data.result.paymentStatus})\n                    this.setState({taskendDate:response.data.result.taskendDate})\n                    this.setState({taskstartDate:response.data.result.startDate})\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n        //On value change of a control, set it in state.\n        onValueChange = (event) => {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    \n        //validate due date\n        validateDueDate = (event) => {\n            let isValid = true;\n            if (this.state.dueDate) {\n                const today = new Date()\n                const selectedDate = new Date(this.state.dueDate)\n                if (selectedDate < today) {\n                    this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                    isValid = false;\n                }\n                else {\n                    this.setState({ dueDateError: \"\" })\n                }\n            } \n            return isValid;\n        }\n    \n        //validate form\n        validateForm = (event) => {\n            let isValid = true\n            if (!this.validateDueDate()) {\n                isValid = false;\n            }\n           \n            return isValid;\n        }\n        //update invoice\n        update = (e) =>{\n            if(this.validateForm()){\n                if(!this.state.paymentstatus && !this.state.dueDate){\n                    alert(\"Please fill the field\")\n                }else{\n                    \n                    invoiceServices.updateInvoice(this.state).then((response) => {\n                    if(response){\n                        alert(\"Updated Successfully\")\n                        this.cancel()\n                    }\n                }).catch((error) => {\n                     console.log(error)\n                })\n                \n            }\n        }   \n        }\n        //redirect to invoice management screen\n        cancel = (e) =>{\n            this.props.history.push('/invoices')\n        }\n       \n        render() {\n            return (\n                <div className=\"page-container edit-invoice-generation-container\">\n                    <div className=\"page-header-container\">\n                        {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row className=\"invoice-generation-content\">\n                                <Col>\n                                    <Form>\n                                        <div className=\"generate-forms\">\n                                            <Row>\n                                                <Col>\n                                                    <span>\n                                                        <div>Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.project}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>From date :  {this.state.taskstartDate}</div>\n                                                        <div>To Name :  {this.state.taskendDate}</div>\n                                                        <div>Generated Date: {this.state.generatedDate} </div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        \n                                                    </span>\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Payment Status</Form.Label>\n                                                        <Form.Control type=\"text\" name=\"paymentstatus\" value={this.state.paymentstatus} onChange={this.onValueChange}>\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"inline-date-control\">\n                                                            <div className=\"due-date-control\">\n                                                                <div>\n                                                                    <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                </div>\n                                                                <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                    onBlur={this.validateDate}\n                                                                    isInvalid={this.state.dueDateError} />\n                                                                <Form.Control.Feedback type=\"invalid\">\n                                                                    {this.state.dueDateError}\n                                                                </Form.Control.Feedback>\n                                                            </div>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n            \n                                            </Row>\n                                        </div>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <div className=\"generate-buttons\">         \n                                <Row className=\"generate-button-container\">\n                                    <Button className=\"primary-button\" onClick={this.update}>\n                                        Update Invoice\n                                    </Button>\n                                    <Button className=\"secondary-button\" onClick={this.cancel}>\n                                        Cancel\n                                    </Button>\n                                </Row> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n}\nexport default withRouter(EditInvoice)","import React, { Component } from 'react'\nimport { withRouter } from \"react-router\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PageHeader from \"../components/PageHeader\";\nimport { exportComponentAsJPEG } from 'react-component-export-image';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Button from 'react-bootstrap/Button';\nimport { ButtonGroup } from 'react-bootstrap';\nimport testimonialServices from \".././services/testimonialServices\"\nimport registerServices from \".././services/registerServices\"\nimport \".././styles/BusinessCard.scss\";\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Front component.\n */\nclass BusinessCardFront extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-front\">\n                        <div className=\"name\">\n                            {this.props.apiData.Name ? (\n                                <span>{this.props.apiData.Name}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"email other-information\">\n                            {this.props.apiData.Email ? (\n                                <span><i class=\"fas fa-envelope-square\"></i>&nbsp;{this.props.apiData.Email}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"phone-number other-information\">\n                            {this.props.apiData.ContactNo ? (\n                                <span><i class=\"fas fa-phone-alt\"></i>&nbsp;{this.props.apiData.ContactNo}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"linked-in-profile other-information\">\n                            {this.props.apiData.LinkedInProfile ? (\n                                <span><i class=\"fab fa-linkedin\"></i>&nbsp;{this.props.apiData.LinkedInProfile}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"web-site other-information\">\n                            {this.props.apiData.Website ? (\n                                <span><i class=\"fas fa-at\"></i>&nbsp;{this.props.apiData.Website}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Back component.\n */\nclass BusinessCardBack extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-back\">\n                        <div className=\"feedback-row\">\n                        Client Feedback...\n                        </div>\n                        \n                        {\n                            this.props.apiData && this.props.apiData.length ? this.props.apiData.map(row => (\n                                <div className=\"feedback-row\">\n                                    <span className=\"feedback\">{row.feedback}</span><span className=\"client\">{row.client}</span>\n                                </div>\n                            )) : (\n                                <div className=\"empty-review\">Eager To Help Out.....</div>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Combined display of front and back.\n */\nclass BusinessClassDisplay extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n\n    render() {\n        return (\n            <Row className=\"business-card-content\">\n                <Col className=\"business-card-data\">\n                    <Flippy flipOnHover={true} style={{ display: \"flex\", justifyContent: \"center\", width: '24rem', height: '12rem' }}>\n                        <FrontSide>\n                            <BusinessCardFront apiData={this.props && this.props.data && this.props.data.profileData} />\n                        </FrontSide>\n                        <BackSide>\n                            <BusinessCardBack apiData={this.props && this.props.data &&  this.props.data.testimonialData} />\n                        </BackSide>\n                    </Flippy>\n                </Col>\n            </Row>\n        )\n\n    }\n}\n\n/**\n * Author: Bansi Mehta.\n * Created On: 2021-07-06\n * BusinessCard Screen for displaying and printing.\n */\nexport class BusinessCard extends Component {\n    constructor(props) {\n        super(props);\n        this.componentRef = React.createRef();\n        this.state = {\n            profileData: {},\n            testimonialData: [],\n            exportSide: 'Front'\n        }\n    }\n\n    exportAsSide = (side) => {\n        this.setState({ exportSide: side })\n    }\n\n    componentDidMount() {\n        let id = localStorage.getItem('user_id')\n        registerServices.fetchUserById(id).then(response => {\n            if (response) {\n                this.setState({profileData: response})\n            }\n        })\n\n        testimonialServices.list({\"userId\": id}).then(response => {\n            if (response.data && response.data.length) {\n                this.setState({testimonialData: response.data.splice(0,2)})\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-container business-card-page\">\n                    <div className=\"page-header-container\">\n                        <PageHeader title=\"Business Card\" subtitle=\"\" />\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row>\n                                <Col xs={12}>\n                                    <BusinessClassDisplay data={this.state}></BusinessClassDisplay>\n                                </Col>\n                                <Col xs={4} className=\"button-to-export\">\n                                    <div className=\"button-container\">\n                                        <ButtonGroup>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Front')}>Front</Button>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Back')}>Back</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </Col>\n                                <Col xs={8}>\n                                    <React.Fragment>\n                                        <div>\n                                            {\n                                                this.state.exportSide === 'Front' ? (\n                                                    <BusinessCardFront ref={this.componentRef} apiData={this.state.profileData} />\n\n                                                ) : (\n                                                    <BusinessCardBack ref={this.componentRef} apiData={this.state.testimonialData} />\n                                                )\n                                            }\n                                        </div>\n                                        <div className=\"export-button\">\n                                            <Button className=\"primary-button\" onClick={() => exportComponentAsJPEG(this.componentRef)}>Export As JPEG</Button>\n                                        </div>\n                                    </React.Fragment>\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BusinessCard)\n","/* Author: Team */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Tnc from \"./pages/Tnc\";\nimport Privacy from \"./pages/Privacy\";\nimport Login from \"./pages/Auth/Login\";\nimport Register from \"./pages/Auth/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Profile from \"./pages/Profile\";\nimport EditProfile from \"./pages/EditProfile\";\nimport InvoiceGeneration from \"./pages/Invoices/InvoiceGeneration\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/Projects/AddProject\";\nimport EditProject from \"./pages/Projects/EditProject\";\nimport ViewProject from \"./pages/Projects/ViewProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/Clients/AddClient\";\nimport EditClient from \"./pages/Clients/EditClient\";\nimport ViewClient from \"./pages/Clients/ViewClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport RequestTestimonials from \"./pages/RequestTestimonial\";\nimport InvoiceManagement from \"./pages/Invoices\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\nimport EditInvoice from \"./pages/Invoices/EditInvoice\"\n\nimport { BusinessCard } from \"./pages/BusinessCard\";\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/about\">\n                    <AppLayout>\n                        <About />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/tnc\">\n                    <AppLayout>\n                        <Tnc />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/privacy\">\n                    <AppLayout>\n                        <Privacy />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register/add\">\n                    <DashboardLayout>\n                        <Register />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/profile\">\n                    <DashboardLayout>\n                        <Profile />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/register/edit/:id\">\n                    <DashboardLayout>\n                        <EditProfile />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editProfile\">\n                    <DashboardLayout>\n                        <EditProfile />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/clients/add\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/EditClient\">\n                    <DashboardLayout>\n                        <EditClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/ViewClient\">\n                    <DashboardLayout>\n                        <ViewClient />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/view/:id\">\n                    <DashboardLayout>\n                        <ViewProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/invoices\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/invoices/generate\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editinvoice\">\n                    <DashboardLayout>\n                        <EditInvoice />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials/requestTestimonials/:id\">\n                    <AppLayout>\n                        <RequestTestimonials />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/business-card\">\n                    <DashboardLayout>\n                        <BusinessCard />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}